class BytesInput{static toBytes(e){return ArrayBuffer.isView(e)&&(e=e.buffer),[new Uint8Array(e),!1,"bytes"]}}class BytesOutput{static get typeList(){return["buffer","bytes","uint8","view"]}static getType(e){if(!BytesOutput.typeList.includes(e))throw new TypeError(`Unknown output type: '${e}'`);return e}static compile(e,t){let s;return s="buffer"===(t=BytesOutput.getType(t))?e.buffer:"view"===t?new DataView(e.buffer):e,s}}class SmartInput{static makeDataView(e){const t=new ArrayBuffer(e);return new DataView(t)}static floatingPoints(e,t=!1){const s=this.makeDataView(8);return s.setFloat64(0,e,t),s}static numbers(e,t=!1){let s,r;if(Number.isInteger(e)){if(r="int",!Number.isSafeInteger(e)){let t,s,r;throw e<0?(t=Number.MIN_SAFE_INTEGER,s="smaller",r="MIN"):(t=Number.MAX_SAFE_INTEGER,s="bigger",r="MAX"),new RangeError(`The provided integer is ${s} than ${r}_SAFE_INTEGER: '${t}'\nData integrity is not guaranteed. Use a BigInt to avoid this issue.\n(If you see this error although a float was provided, the input has to many digits before the decimal point to store the decimal places in a float with 64 bits.)`)}e<0?e<-2147483648?(s=this.makeDataView(8),s.setBigInt64(0,BigInt(e),t)):e<-32768?(s=this.makeDataView(4),s.setInt32(0,e,t)):(s=this.makeDataView(2),s.setInt16(0,e,t)):e>0?e>4294967295?(s=this.makeDataView(8),s.setBigUint64(0,BigInt(e),t)):e>65535?(s=this.makeDataView(4),s.setUint32(0,e,t)):(s=this.makeDataView(2),s.setInt16(0,e,t)):s=new Uint16Array([0])}else r="float",s=this.floatingPoints(e,t);return[new Uint8Array(s.buffer),r]}static bigInts(e,t=!1){const s=new Array,r=t?"push":"unshift",i=18446744073709551616n;if(e<0)for(;e<-9223372036854775808n;)s[r](e%i),e>>=64n;else for(;e>=i;)s[r](e%i),e>>=64n;s[r](e);const n=8*s.length,o=this.makeDataView(n);return s.forEach(((e,s)=>{const r=8*s;o.setBigUint64(r,e,t)})),new Uint8Array(o.buffer)}static toBytes(e,t){let s,r=!1,i="bytes";if(e instanceof ArrayBuffer)s=new Uint8Array(e.slice());else if(ArrayBuffer.isView(e))s=new Uint8Array(e.buffer.slice());else if("string"==typeof e||e instanceof String)s=(new TextEncoder).encode(e);else if("number"==typeof e){if(isNaN(e))throw new TypeError("Cannot proceed. Input is NaN.");if(e==1/0)throw new TypeError("Cannot proceed. Input is Infinity.");if(t.signed&&e<0&&(r=!0,e=-e),t.numberMode){const r=this.floatingPoints(e,t.littleEndian);s=new Uint8Array(r.buffer),i="float"}else[s,i]=this.numbers(e,t.littleEndian)}else if("bigint"==typeof e)t.signed&&e<0&&(r=!0,e*=-1n),s=this.bigInts(e,t.littleEndian),i="int";else{if(!Array.isArray(e))throw new TypeError("The provided input type can not be processed.");{const r=new Array;for(const s of e)r.push(...this.toBytes(s,t)[0]);s=Uint8Array.from(r)}}return[s,r,i]}}class SmartOutput{static get typeList(){return["bigint64","bigint_n","biguint64","buffer","bytes","float32","float64","float_n","int8","int16","int32","int_n","str","uint8","uint16","uint32","uint_n","view"]}static getType(e){if(!this.typeList.includes(e))throw new TypeError(`Unknown output type: '${e}'`);return e}static makeTypedArrayBuffer(e,t,s,r){const i=e.byteLength,n=(t-e.byteLength%t)%t,o=r&&i>1?255:0;let a=e;if(n){a=new Uint8Array(i+n),a.fill(o);const t=s?0:n;a.set(e,t)}return a.buffer}static makeTypedArray(e,t,s,r){let i;if("int16"===t||"uint16"===t){const n=this.makeTypedArrayBuffer(e,2,s,r);i="int16"===t?new Int16Array(n):new Uint16Array(n)}else if("int32"===t||"uint32"===t||"float32"===t){const n=this.makeTypedArrayBuffer(e,4,s,r);i="int32"===t?new Int32Array(n):"uint32"===t?new Uint32Array(n):new Float32Array(n)}else if("bigint64"===t||"biguint64"===t||"float64"===t){const n=this.makeTypedArrayBuffer(e,8,s,r);i="bigint64"===t?new BigInt64Array(n):"biguint64"===t?new BigUint64Array(n):new Float64Array(n)}return i}static compile(e,t,s=!1,r=!1){let i;if(t=this.getType(t),r){let r;if(r=t.match(/^float/)?-this.compile(e,"float_n",s):-this.compile(e,"uint_n",s),"float_n"===t)return r;e=SmartInput.toBytes(r,{littleEndian:s,numberMode:!1,signed:!1})[0]}if("buffer"===t)i=e.buffer;else if("bytes"===t||"uint8"===t)i=e;else if("int8"===t)i=new Int8Array(e.buffer);else if("view"===t)i=new DataView(e.buffer);else if("str"===t)i=(new TextDecoder).decode(e);else if("uint_n"===t||"int_n"===t||"bigint_n"===t){if(1===e.length){const t=this.makeTypedArrayBuffer(e,2,s,r);e=new Uint8Array(t)}s&&e.reverse();let n=0n;e.forEach((e=>n=(n<<8n)+BigInt(e))),"uint_n"!==t&&(n=BigInt.asIntN(8*e.length,n)),i="bigint_n"!==t&&n>=Number.MIN_SAFE_INTEGER&&n<=Number.MAX_SAFE_INTEGER?Number(n):n}else if("float_n"===t)if(e.length<=4){let t;t=4===e.length?e:this.makeTypedArray(e,"float32",!1,r);i=new DataView(t.buffer).getFloat32(0,s)}else{if(!(e.length<=8))throw new RangeError("The provided input is to complex to be converted into a floating point.");{let t;t=8===e.length?e:this.makeTypedArray(e,"float64",!1,r);i=new DataView(t.buffer).getFloat64(0,s)}}else if("number"===t){if(8!==e.length)throw new TypeError("Type mismatch. Cannot convert into number.");const t=new Float64Array(e.buffer);i=Number(t)}else i=this.makeTypedArray(e,t,s,r);return i}}const DEFAULT_INPUT_HANDLER=SmartInput,DEFAULT_OUTPUT_HANDLER=SmartOutput;class SignError extends TypeError{constructor(){super("The input is signed but the converter is not set to treat input as signed.\nYou can pass the string 'signed' to the decode function or when constructing the converter."),this.name="SignError"}}class CharsetError extends TypeError{constructor(e){super(`Invalid input. Character: '${e}' is not part of the charset.`),this.name="CharsetError"}}class Utils{constructor(e){this.root=e,this.converterArgs={},this.#e()}setIOHandlers(e=DEFAULT_INPUT_HANDLER,t=DEFAULT_OUTPUT_HANDLER){this.inputHandler=e,this.outputHandler=t}#e(){this.root.addCharset=(e,t,s=[],r=!0)=>{const i=(e,s,r)=>{if(0===r&&s.length)return console.warn(`This converter has no ${e}. The following argument was ignored:\n'${s}'`),[];let i=r;if("string"==typeof s&&(s=[...s]),Array.isArray(s))i=s.length,s=new Set(s);else if(!(s instanceof Set))throw new TypeError(`The ${e} must be one of the types:\n'str', 'set', 'array'."`);if(s.size===r)return[...s];if(i!==r)throw new Error(`Your ${e} has a length of ${i}. The converter requires a length of ${r}.`);{const s={};(t=[...t]).forEach((e=>{e in s?s[e]++:s[e]=1}));let i="";r<100&&(i=`${t.join("")}\n`,t.forEach((e=>{s[e]>1?i+="^":i+=" "})));const n=Object.keys(s).filter((e=>s[e]>1));throw new Error(`You have repetitive char(s) [ ${n.join(" | ")} ] in your ${e}. Make sure each character is unique.\n${i}`)}};if(this.root.frozenCharsets)throw new Error("The charsets of this converter cannot be changed.");if("string"!=typeof e)throw new TypeError("The charset name must be a string.");r&&e in this.root.charsets&&console.warn(`An existing charset with name ${e} will get replaced.`);const n=i("charset",t,this.root.converter.radix),o=i("padding set",s,this.root.padCharAmount);this.root.charsets[e]=n,o.length&&(this.root.padChars[e]=o),r&&console.info(`New charset '${e}' was added and is ready to use`)},this.root.setDefaultCharset=e=>{if(!(e in this.root.charsets)){const t=Object.keys(this.root.charsets).join("\n   * ");throw new TypeError(`Charset ${e} was not found. Available charsets are:\n   * ${t}`)}this.root.version=e}}#t(e){return e.map((e=>`'${e}'`)).join(", ")}toSignedStr(e,t){return e=e.replace(/^0+(?!$)/,""),t&&(e="-".concat(e)),e}extractSign(e){let t=!1;return"-"===e[0]&&(t=!0,e=e.slice(1)),[e,t]}#s(e,t,s,r){const i=r?"\n * valid declarations for IO handlers are 'bytesOnly', 'bytesIn', 'bytesOut'":"",n=this.root.isMutable.signed?"\n * pass 'signed' to disable, 'unsigned' to enable the use of the twos's complement for negative integers":"",o=this.root.isMutable.littleEndian?"\n * 'be' for big , 'le' for little endian byte order for case conversion":"",a=this.root.isMutable.padding?"\n * pass 'pad' to fill up, 'nopad' to not fill up the output with the particular padding":"",h=this.root.isMutable.upper?"\n * valid args for changing the encoded output case are 'upper' and 'lower'":"",l=`\n * valid args for the output type are ${this.#t(s)}`,c=t?`\n * the option(s) for version/charset are: ${this.#t(t)}`:"",u=Object.keys(this.converterArgs).length?`\n * converter specific args:\n   - ${(()=>Object.keys(this.converterArgs).map((e=>this.converterArgs[e].map((e=>`'${e}'`)).join(" and "))).join("\n   - "))()}`:"";throw new TypeError(`'${e}'\n\nParameters:${i}${n}${o}${a}${h}${l}${c}\n * valid args for integrity check are: 'integrity' and 'nointegrity'\n * 'number' for number-mode (converts every number into a Float64Array to keep the natural js number type)${u}\n\nTraceback:`)}validateArgs(e,t=!1){const s={decimalMode:this.root.decimalMode,integrity:this.root.integrity,littleEndian:this.root.littleEndian,numberMode:this.root.numberMode,options:this.root.options,outputType:this.root.outputType,padding:this.root.padding,signed:this.root.signed,upper:this.root.upper,version:this.root.version};for(const e in this.converterArgs)s[e]=this.root[e];if(!e.length)return t&&this.setIOHandlers(),s;const r=t=>!!e.includes(t)&&(e.splice(e.indexOf(t),1),!0),i=Object.keys(this.root.charsets),n={integrity:["nointegrity","integrity"],littleEndian:["be","le"],padding:["nopad","pad"],signed:["unsigned","signed"],upper:["lower","upper"],...this.converterArgs};if(t)if(r("bytes_only"))this.setIOHandlers(BytesInput,BytesOutput);else{const e=r("bytes_in")?BytesInput:DEFAULT_INPUT_HANDLER,t=r("bytes_out")?BytesOutput:DEFAULT_OUTPUT_HANDLER;this.setIOHandlers(e,t)}const o=this.outputHandler.typeList;if(r("number")?(s.numberMode=!0,s.outputType="float_n"):r("decimal")&&(s.decimalMode=!0,s.outputType="decimal"),e.forEach((e=>{if("object"!=typeof e)if(e=String(e).toLowerCase(),i.includes(e))s.version=e;else if(o.includes(e))s.outputType=e;else{let r=!0;for(const t in n)if(n[t].includes(e)){if(r=!1,!this.root.isMutable[t])throw TypeError(`Argument '${e}' is not allowed for this type of converter.`);s[t]=Boolean(n[t].indexOf(e))}r&&this.#s(e,i,o,t)}else s.options={...s.options,...e}})),s.padding&&s.signed&&(s.padding=!1,console.warn("Padding was set to false due to the signed conversion.")),t)for(const e in s)this.root[e]=s[e];return s}signError(){throw new SignError}wrapOutput(e,t=0){if(!t)return e;const s=new RegExp(`.{1,${t}}`,"gu");return e.match(s).join("\n")}normalizeInput(e,t=!1){return t?String(e):String(e).replace(/\n/g,"")}}class BaseConverter{constructor(e,t=null,s=null,r=0){this.radix=e,null!==t&&null!==s?(this.bsEnc=t,this.bsDec=s):[this.bsEnc,this.bsDec]=this.constructor.guessBS(e),this.decPadVal=r}static guessBS(e){let t=e<8?e:Math.ceil(256/e);for(;t>8&&!(t%8);)t/=8;let s=0;for(;8*s*Math.log(2)/Math.log(e)<t;)s++;return[s,Math.ceil(8*s*Math.log(2)/Math.log(e))]}encode(e,t,s=!1,r=null){let i=this.bsEnc;0===i&&(i=e.byteLength);let n="";const o=i?(i-e.length%i)%i:0,a=new Array(o).fill(0);let h;if(s?(e.reverse(),h=[...a,...e]):h=[...e,...a],10===this.radix){let e=0n;for(let t=0;t<i;t++)e=(e<<8n)+BigInt(h[t]);return[e.toString(),0]}for(let e=0,s=h.length;e<s;e+=i){let s=0n;for(let t=e;t<e+i;t++)s=(s<<8n)+BigInt(h[t]);const a=new Array;let l,c=s;for(;c>=this.radix;)[c,l]=this.divmod(c,this.radix),a.unshift(parseInt(l,10));for(a.unshift(parseInt(c,10));a.length<this.bsDec;)a.unshift(0);let u="";a.forEach((e=>u=u.concat(t[e]))),r&&(u=r(u,o)),n=n.concat(u)}return[n,o]}decode(e,t,s=[],r=!0,i=!1){if(!e)return new Uint8Array(0);let n=this.bsDec;const o=new Array;let a;if([...e].forEach((e=>{const i=t.indexOf(e);if(i>-1)o.push(i);else if(r&&-1===s.indexOf(e))throw new CharsetError(e)})),0===n)n=o.length;else{a=(n-o.length%n)%n;const e=new Array(a).fill(this.decPadVal);i?o.unshift(...e):o.push(...e)}let h=new Array;for(let e=0,t=o.length;e<t;e+=n){let t=0n;for(let s=0;s<n;s++)t+=BigInt(o[e+s])*this.pow(n-1-s);const s=new Array;let r,i=t;for(;i>=256;)[i,r]=this.divmod(i,256),s.unshift(parseInt(r,10));for(s.unshift(parseInt(i,10));s.length<this.bsEnc;)s.unshift(0);h=h.concat(s)}if(i){if(h.length>1){for(;!h[0];)h.shift();h.length||h.push(0),h.reverse()}}else if(this.bsDec){const e=this.padChars(a);h.splice(h.length-e)}return Uint8Array.from(h)}padBytes(e){return Math.floor(e*this.bsDec/this.bsEnc)}padChars(e){return Math.ceil(e*this.bsEnc/this.bsDec)}pow(e){return BigInt(this.radix)**BigInt(e)}divmod(e,t){return[e,t]=[BigInt(e),BigInt(t)],[e/t,e%t]}}class BaseTemplate{constructor(e=!0){this.charsets={},this.decimalMode=!1,this.frozenCharsets=!1,this.hasSignedMode=!1,this.integrity=!0,this.littleEndian=!1,this.numberMode=!1,this.outputType="buffer",this.padding=!1,this.padCharAmount=0,this.padChars={},this.signed=!1,this.upper=null,e&&(this.utils=new Utils(this)),this.version="default",this.options={lineWrap:0},this.isMutable={integrity:!0,littleEndian:!1,padding:!1,signed:!1,upper:!1}}encode(e,t,s,...r){const i=this.utils.validateArgs(r);let[n,o,a]=this.utils.inputHandler.toBytes(e,i),h=null;t&&(h=t(i));let[l,c]=this.converter.encode(n,this.charsets[i.version],i.littleEndian,h);return i.signed&&(l=this.utils.toSignedStr(l,o)),i.upper&&(l=l.toUpperCase()),s&&(l=s({inputBytes:n,output:l,settings:i,zeroPadding:c,type:a})),this.utils.wrapOutput(l,i.options.lineWrap)}decode(e,t,s,r,...i){const n=this.utils.validateArgs(i);e=this.utils.normalizeInput(e,r);let o=!1;this.hasSignedMode&&([e,o]=this.utils.extractSign(e),o&&!n.signed&&this.utils.signError()),this.isMutable.upper&&(e=e.toLowerCase()),t&&(e=t({input:e,settings:n}));let a=this.converter.decode(e,this.charsets[n.version],this.padChars[n.version],n.integrity,n.littleEndian);return s&&(a=s({input:e,output:a,settings:n})),this.utils.outputHandler.compile(a,n.outputType,n.littleEndian,o)}}class Base1 extends BaseTemplate{constructor(...e){super(),this.charsets.all=[..." !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~"],this.charsets.sequence=[..."Hello World!"],this.charsets.default=["1"],this.charsets.tmark=["|","#"],this.converter=new BaseConverter(10,0,0),this.hasSignedMode=!0,this.littleEndian=!0,this.signed=!0,this.isMutable.charsets=!1,this.isMutable.signed=!0,this.isMutable.upper=!0,this.utils.validateArgs(e,!0)}encode(e,...t){const s=this.utils.validateArgs(t);let r,i;[r,i]=this.utils.inputHandler.toBytes(e,s);let n=this.converter.encode(r,null,s.littleEndian)[0],o=BigInt(n);if(o>Number.MAX_SAFE_INTEGER)throw new RangeError("Invalid string length.");o>16777216&&console.warn("The string length is really long. The JavaScript engine may have memory issues generating the output string."),o=Number(o);const a=this.charsets[s.version],h=a.length;let l="";if(1===h)l=a.at(0).repeat(o);else if("all"===s.version)for(let e=0;e<o;e++){l+=a[Math.floor(Math.random()*h)]}else if("tmark"===s.version){const e=o%5;o>4&&(l=a.at(1).repeat((o-e)/5)),l+=a.at(0).repeat(e)}else for(let e=0;e<o;e++)l+=a[e%h];return l=this.utils.toSignedStr(l,i),s.upper&&(l=l.toUpperCase()),this.utils.wrapOutput(l,s.options.lineWrap)}decode(e,...t){const s=this.utils.validateArgs(t);let r;if(e=this.utils.normalizeInput(e),[e,r]=this.utils.extractSign(e),"all"!==s.version){const t=[...new Set(this.charsets[s.version])].join(""),r=new RegExp(`[^${t}]`,"g");e=e.replace(r,"")}e=String(e.length);const i=this.converter.decode(e,[..."0123456789"],[],"",s.integrity,s.littleEndian);return this.utils.outputHandler.compile(i,s.outputType,s.littleEndian,r)}}class Base16 extends BaseTemplate{constructor(...e){super(),this.converter=new BaseConverter(16,1,2),this.charsets.default=[..."0123456789abcdef"],this.padChars.default=[],this.hasSignedMode=!0,this.isMutable.signed=!0,this.isMutable.upper=!0,this.utils.validateArgs(e,!0)}encode(e,...t){return super.encode(e,null,null,...t)}decode(e,...t){return super.decode(e,(({input:e})=>((e=e.replace(/^0x/,"")).length%2&&(e="0".concat(e)),e)),null,!1,...t)}}class Base32 extends BaseTemplate{constructor(...e){super(),this.converter=new BaseConverter(32,5,8),this.charsets.crockford=[..."0123456789abcdefghjkmnpqrstvwxyz"],this.padChars.crockford=["="],this.charsets.rfc3548=[..."abcdefghijklmnopqrstuvwxyz234567"],this.padChars.rfc3548=["="],this.charsets.rfc4648=[..."0123456789abcdefghijklmnopqrstuv"],this.padChars.rfc4648=["="],this.charsets.zbase32=[..."ybndrfg8ejkmcpqxot1uwisza345h769"],this.padChars.zbase32=["="],this.padCharAmount=1,this.hasSignedMode=!0,this.version="rfc4648",this.isMutable.littleEndian=!0,this.isMutable.padding=!0,this.isMutable.signed=!0,this.isMutable.upper=!0,this.utils.validateArgs(e,!0),this.padding=/rfc3548|rfc4648/.test(this.version),this.upper="crockford"===this.version}encode(e,...t){return super.encode(e,null,(({output:e,settings:t,zeroPadding:s})=>{if(!t.littleEndian&&s){const r=this.converter.padBytes(s),i=this.padChars[t.version].at(0);e=e.slice(0,-r),t.padding&&(e=e.concat(i.repeat(r)))}return e}),...t)}decode(e,...t){return super.decode(e,null,null,!1,...t)}}class Base58 extends BaseTemplate{constructor(...e){super(),this.converter=new BaseConverter(58,0,0),this.charsets.default=[..."123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"],Object.defineProperty(this.padChars,"default",{get:()=>[this.charsets.default.at(0)]}),this.charsets.bitcoin=[..."123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"],Object.defineProperty(this.padChars,"bitcoin",{get:()=>[this.charsets.bitcoin.at(0)]}),this.charsets.flickr=[..."123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"],Object.defineProperty(this.padChars,"flickr",{get:()=>[this.charsets.flickr.at(0)]}),this.padding=!0,this.version="bitcoin",this.isMutable.padding=!0,this.isMutable.signed=!0,this.utils.validateArgs(e,!0)}encode(e,...t){return super.encode(e,null,(({inputBytes:e,output:t,settings:s,type:r})=>{if(s.padding&&"int"!==r){let r=0;const i=e.length,n=this.charsets[s.version].at(0);if(i){for(;!e[r];)if(r++,r===i){r=0;break}const s=r;s&&(t=n.repeat(s).concat(t))}}return t}),...t)}decode(e,...t){return super.decode(e,null,(({input:e,output:t,settings:s})=>{const r=this.charsets[s.version].at(0);if(s.padding&&e.length>1){let s=0;for(;e[s]===r;)s++;const i=s;i&&(t=Uint8Array.from([...new Array(i).fill(0),...t]))}return t}),!1,...t)}}class Base64 extends BaseTemplate{constructor(...e){super(),this.converter=new BaseConverter(64,3,4),this.charsets.default=[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"],this.padChars.default=["="],this.charsets.urlsafe=this.charsets.default.slice(0,-2).concat(["-","_"]),this.padChars.urlsafe=["="],this.padCharAmount=1,this.padding=!0,this.isMutable.padding=!0,this.utils.validateArgs(e,!0)}encode(e,...t){return super.encode(e,null,(({output:e,settings:t,zeroPadding:s})=>{if(s){const r=this.converter.padBytes(s),i=this.padChars[t.version].at(0);e=e.slice(0,-r),t.padding&&(e=e.concat(i.repeat(r)))}return e}),...t)}decode(e,...t){return super.decode(e,null,null,!1,...t)}}class UUencode extends BaseTemplate{constructor(...e){super(),this.converter=new BaseConverter(64,3,4),this.charsets.default=[..."`!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_"],Object.defineProperty(this.padChars,"default",{get:()=>[this.charsets.default.at(0)]}),this.charsets.original=[" ",...this.charsets.default.slice(1)],Object.defineProperty(this.padChars,"original",{get:()=>[this.charsets.original.at(0)]}),this.charsets.xx=[..."+-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"],Object.defineProperty(this.padChars,"xx",{get:()=>[this.charsets.xx.at(0)]}),this.padding=!0,this.header=!1,this.utils.converterArgs.header=["noheader","header"],this.isMutable.header=!0,this.isMutable.integrity=!1,this.utils.validateArgs(e,!0)}encode(e,...t){return super.encode(e,null,(({output:e,settings:t,zeroPadding:s})=>{const r=this.charsets[t.version],i=[...e];if(t.header){e=`begin ${t.options.permissions||een()} ${t.options.file||ees()}\n`}else e="";for(;;){const t=i.splice(0,60);if(!i.length){const i=this.converter.padChars(t.length)-s;e+=`${r.at(i)}${t.join("")}\n`;break}e+=`${r.at(45)}${t.join("")}\n`}return e+=`${r.at(0)}\n`,t.header&&(e+="\nend"),e}),...t)}decode(e,...t){let s=0;return super.decode(e,(({input:e,settings:t})=>{const r=this.charsets[t.version],i=e.trim().split("\n"),n=[];/^begin/i.test(i.at(0))&&i.shift();for(const e of i){const t=[...e],i=r.indexOf(t.shift());if(!(i>0))break;if(n.push(...t),45!==i){s=this.converter.padChars(t.length)-i;break}}return n.join("")}),(({output:e})=>(s&&(e=new Uint8Array(e.slice(0,-s))),e)),!0,...t)}}const een=()=>{const e=()=>Math.floor(8*Math.random());return`${e()}${e()}${e()}`},ees=()=>{const e=e=>e.at(Math.floor(Math.random()*e.length));return`${e(["unchronological","unconditionally","underemphasized","underprivileged","undistinguished","unsophisticated","untitled","untitled-1","untitled-3","uuencode"])}.${e(["applescript","bat","beam","bin","exe","js","mam","py","sh","vdo","wiz"])}`};class Base85 extends BaseTemplate{constructor(...e){super(),this.converter=new BaseConverter(85,4,5,84),this.charsets.adobe=[..."!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstu"],this.charsets.ascii85=this.charsets.adobe.slice(),this.charsets.rfc1924=[..."0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!#$%&()*+-;<=>?@^_`{|}~"],this.charsets.z85=[..."0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-:+=^!/*?&<>()[]{}@%$#"],this.version="ascii85",this.utils.validateArgs(e,!0)}encode(e,...t){return super.encode(e,(e=>{let t;return e.version.match(/adobe|ascii85/)&&(t=(e,t)=>t||"!!!!!"!==e?e:"z"),t}),(({output:e,settings:t,zeroPadding:s})=>{if(s){const t=this.converter.padBytes(s);e=e.slice(0,-t)}return"adobe"===t.version&&(e=`<~${e}~>`),e}),...t)}decode(e,...t){return super.decode(e,(({input:e,settings:t})=>(t.version.match(/adobe|ascii85/)&&(e=e.replace(/z/g,"!!!!!"),"adobe"===t.version&&(e=e.replace(/^<~|~>$/g,""))),e)),null,!1,...t)}}class Base91 extends BaseTemplate{constructor(...e){super(),this.converter={radix:91,bsEnc:0,bsDec:0},this.charsets.default=[...'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!#$%&()*+,./:;<=>?@[]^_`{|}~"'],this.version="default",this.utils.validateArgs(e,!0),this.isMutable.integrity=!1}encode(e,...t){const s=this.utils.validateArgs(t),r=this.utils.inputHandler.toBytes(e,s)[0];let i=0,n=0,o="";const a=this.charsets[s.version];if(r.forEach((e=>{if(n+=e<<i,i+=8,i>13){let e,t,s=13,r=n%8192;r<89&&(s=14,r=n%16384),n>>=s,i-=s,[e,t]=this.#r(r,91),o=`${o}${a[t]}${a[e]}`}})),i){let e,t;[e,t]=this.#r(n,91),o=o.concat(a[t]),(i>7||n>90)&&(o=o.concat(a[e]))}return this.utils.wrapOutput(o,s.options.lineWrap)}decode(e,...t){const s=this.utils.validateArgs(t);e=this.utils.normalizeInput(e);const r=[...e];let i=r.length,n=!1;i%2&&(n=!0,i--);let o=0,a=0;const h=this.charsets[s.version],l=new Array;for(let e=0;e<i;e+=2){const t=h.indexOf(r[e]),s=h.indexOf(r[e+1]);if(t<0)throw new CharsetError(r[e]);if(s<0)throw new CharsetError(r[e+1]);const i=t+91*s;o=(i<<a)+o,a+=i%8192>88?13:14;do{l.push(o%256),o>>=8,a-=8}while(a>7)}if(n){const e=r.at(i),t=h.indexOf(e);l.push(((t<<a)+o)%256)}const c=Uint8Array.from(l);return this.utils.outputHandler.compile(c,s.outputType)}#r(e,t){return[Math.floor(e/t),e%t]}}class LEB128 extends BaseTemplate{constructor(...e){super(),this.converter=new BaseConverter(10,0,0),this.hexlify=new BaseConverter(16,1,2),this.charsets.default="<placeholder>",this.charsets.hex="<placeholder>",this.version="default",this.frozenCharsets=!0,this.littleEndian=!0,this.hasSignedMode=!0,this.isMutable.signed=!0,this.utils.validateArgs(e,!0)}encode(e,...t){const s=this.utils.validateArgs(t),r=s.signed;s.signed=!0;const[i,n]=this.utils.inputHandler.toBytes(e,s);let o=this.converter.encode(i,null,s.littleEndian)[0],a=BigInt(o),h=new Array;if(n){if(!r)throw new TypeError("Negative values in unsigned mode are invalid.");a=-a}if(r)for(;;){const e=Number(127n&a);if(a>>=7n,0==a&&0==(64&e)||-1==a&&0!=(64&e)){h.push(e);break}h.push(128|e)}else for(;;){const e=Number(127n&a);if(a>>=7n,0==a){h.push(e);break}h.push(128|e)}const l=Uint8Array.from(h);return"hex"===s.version?this.hexlify.encode(l,[..."0123456789abcdef"],!1)[0]:l}decode(e,...t){const s=this.utils.validateArgs(t);if("hex"===s.version)e=this.hexlify.decode(this.utils.normalizeInput(e).toLowerCase(),[..."0123456789abcdef"],[],s.integrity,!1);else{if(void 0===e.byteLength)throw new TypeError("Input must be a bytes like object.");e=BytesInput.toBytes(e)[0]}if(1===e.length&&!e[0])return this.utils.outputHandler.compile(new Uint8Array(1),s.outputType,!0);e=Array.from(e);let r,i,n,o=0n,a=-7n;for(r of e)a+=7n,o+=BigInt(127&r)<<a;s.signed&&0!=(64&r)&&(o|=-(1n<<a+7n)),[i,n]=this.utils.extractSign(o.toString());const h=this.converter.decode(i,[..."0123456789"],[],s.integrity,!0);return this.utils.outputHandler.compile(h,s.outputType,!0,n)}}class Ecoji extends BaseTemplate{#i={};#n=null;constructor(...e){super(),this.charsets.emojis_v1=[..."🀄🃏🅰🅱🅾🅿🆎🆑🆒🆓🆔🆕🆖🆗🆘🆙🆚🇦🇧🇨🇩🇪🇫🇬🇭🇮🇯🇰🇱🇲🇳🇴🇵🇶🇷🇸🇹🇺🇻🇼🇽🇾🇿🈁🈂🈚🈯🈲🈳🈴🈵🈶🈷🈸🈹🈺🉐🉑🌀🌁🌂🌃🌄🌅🌆🌇🌈🌉🌊🌋🌌🌍🌎🌏🌐🌑🌒🌓🌔🌕🌖🌗🌘🌙🌚🌛🌜🌝🌞🌟🌠🌡🌤🌥🌦🌧🌨🌩🌪🌫🌬🌭🌮🌯🌰🌱🌲🌳🌴🌵🌶🌷🌸🌹🌺🌻🌼🌽🌾🌿🍀🍁🍂🍃🍄🍅🍆🍇🍈🍉🍊🍋🍌🍍🍎🍏🍐🍑🍒🍓🍔🍕🍖🍗🍘🍙🍚🍛🍜🍝🍞🍟🍠🍡🍢🍣🍤🍥🍦🍧🍨🍩🍪🍫🍬🍭🍮🍯🍰🍱🍲🍳🍴🍵🍶🍷🍸🍹🍺🍻🍼🍽🍾🍿🎀🎁🎂🎃🎄🎅🎆🎇🎈🎉🎊🎋🎌🎍🎎🎏🎐🎑🎒🎓🎖🎗🎙🎚🎛🎞🎟🎠🎡🎢🎣🎤🎥🎦🎧🎨🎩🎪🎫🎬🎭🎮🎯🎰🎱🎲🎳🎴🎵🎶🎷🎸🎹🎺🎻🎼🎽🎾🎿🏀🏁🏂🏃🏄🏅🏆🏇🏈🏉🏊🏋🏌🏎🏏🏐🏑🏒🏓🏔🏕🏖🏗🏘🏙🏚🏛🏜🏝🏞🏟🏠🏡🏢🏣🏤🏥🏦🏧🏨🏩🏪🏫🏬🏭🏮🏯🏰🏳🏴🏵🏷🏸🏹🏺🏻🏼🏽🏾🏿🐀🐁🐂🐃🐄🐅🐆🐇🐈🐉🐊🐋🐌🐍🐎🐏🐐🐑🐒🐓🐔🐕🐖🐗🐘🐙🐚🐛🐜🐝🐞🐟🐠🐡🐢🐣🐤🐥🐦🐧🐨🐩🐪🐫🐬🐭🐮🐯🐰🐱🐲🐳🐴🐵🐶🐷🐸🐹🐺🐻🐼🐽🐾🐿👀👁👂👃👄👅👆👇👈👉👊👋👌👍👎👏👐👑👒👓👔👕👖👗👘👙👚👛👜👝👞👟👠👡👢👣👤👥👦👧👨👩👪👫👬👭👮👯👰👱👲👳👴👵👶👷👸👹👺👻👼👽👾👿💀💁💂💃💄💅💆💇💈💉💊💋💌💍💎💏💐💑💒💓💔💕💖💗💘💙💚💛💜💝💞💟💠💡💢💣💤💥💦💧💨💩💪💫💬💭💮💯💰💱💲💳💴💵💶💷💸💹💺💻💼💽💾💿📀📁📂📃📄📅📆📇📈📉📊📋📌📍📎📏📐📒📓📔📕📖📗📘📙📚📛📜📝📞📟📠📡📢📣📤📥📦📧📨📩📪📫📬📭📮📯📰📱📲📳📴📵📶📷📸📹📺📻📼📽📿🔀🔁🔂🔃🔄🔅🔆🔇🔈🔉🔊🔋🔌🔍🔎🔏🔐🔑🔒🔓🔔🔕🔖🔗🔘🔙🔚🔛🔜🔝🔞🔟🔠🔡🔢🔣🔤🔥🔦🔧🔨🔩🔪🔫🔬🔭🔮🔯🔰🔱🔲🔳🔴🔵🔶🔷🔸🔹🔺🔻🔼🔽🕉🕊🕋🕌🕍🕎🕐🕑🕒🕓🕔🕕🕖🕗🕘🕙🕚🕛🕜🕝🕞🕟🕠🕡🕢🕣🕤🕥🕦🕧🕯🕰🕳🕴🕵🕶🕷🕸🕹🕺🖇🖊🖋🖌🖍🖐🖕🖖🖤🖥🖨🖱🖲🖼🗂🗃🗄🗑🗒🗓🗜🗝🗞🗡🗣🗨🗯🗳🗺🗻🗼🗽🗾🗿😀😁😂😃😄😅😆😇😈😉😊😋😌😍😎😏😐😑😒😓😔😕😖😗😘😙😚😛😜😝😞😟😠😡😢😣😤😥😦😧😨😩😪😫😬😭😮😯😰😱😲😳😴😵😶😷😸😹😺😻😼😽😾😿🙀🙁🙂🙃🙄🙅🙆🙇🙈🙉🙊🙌🙍🙎🙏🚀🚁🚂🚃🚄🚅🚆🚇🚈🚉🚊🚋🚌🚍🚎🚏🚐🚑🚒🚓🚔🚕🚖🚗🚘🚙🚚🚛🚜🚝🚞🚟🚠🚡🚢🚣🚤🚥🚦🚧🚨🚩🚪🚫🚬🚭🚮🚯🚰🚱🚲🚳🚴🚵🚶🚷🚸🚹🚺🚻🚼🚽🚾🚿🛀🛁🛂🛃🛄🛅🛋🛌🛍🛎🛏🛐🛑🛒🛠🛡🛢🛣🛤🛥🛩🛫🛬🛰🛳🛴🛵🛶🛷🛸🛹🤐🤑🤒🤓🤔🤕🤖🤗🤘🤙🤚🤛🤜🤝🤞🤟🤠🤡🤢🤣🤤🤥🤦🤧🤨🤩🤪🤫🤬🤭🤮🤯🤰🤱🤲🤳🤴🤵🤶🤷🤸🤹🤺🤼🤽🤾🥀🥁🥂🥃🥄🥅🥇🥈🥉🥊🥋🥌🥍🥎🥏🥐🥑🥒🥓🥔🥕🥖🥗🥘🥙🥚🥛🥜🥝🥞🥟🥠🥡🥢🥣🥤🥥🥦🥧🥨🥩🥪🥫🥬🥭🥮🥯🥰🥳🥴🥵🥶🥺🥼🥽🥾🥿🦀🦁🦂🦃🦄🦅🦆🦇🦈🦉🦊🦋🦌🦍🦎🦏🦐🦑🦒🦓🦔🦕🦖🦗🦘🦙🦚🦛🦜🦝🦞🦟🦠🦡🦢🦰🦱🦲🦳🦴🦵🦶🦷🦸🦹🧀🧁🧂🧐🧑🧒🧓🧔🧕"],this.padChars.emojis_v1=["⚜","🏍","📑","🙋","☕"],this.charsets.emojis_v2=[..."🀄🃏⏰⏳☔♈♉♊♋♌♍♎♏♐♑♒♓♿⚓⚡⚽⚾⛄⛅⛎⛔⛪⛲⛳⛵⛺⛽✊✋✨⭐🛕🛖🛗🛝🛞🛟🛺🈁🛻🤌🤏🤿🥱🥲🥸🥹🥻🦣🦤🦥🦦🦧🌀🌁🌂🌃🌄🌅🌆🌇🌈🌉🌊🌋🌌🌍🌎🌏🌐🌑🌒🌓🌔🌕🌖🌗🌘🌙🌚🌛🌜🌝🌞🌟🌠🦨🦩🦪🦫🦬🦭🦮🦯🦺🦻🌭🌮🌯🌰🌱🌲🌳🌴🌵🦼🌷🌸🌹🌺🌻🌼🌽🌾🌿🍀🍁🍂🍃🍄🍅🍆🍇🍈🍉🍊🍋🍌🍍🍎🍏🍐🍑🍒🍓🍔🍕🍖🍗🍘🍙🍚🍛🍜🍝🍞🍟🍠🍡🍢🍣🍤🍥🍦🍧🍨🍩🍪🍫🍬🍭🍮🍯🍰🍱🍲🍳🍴🍵🍶🍷🍸🍹🍺🍻🍼🦽🍾🍿🎀🎁🎂🎃🎄🎅🎆🎇🎈🎉🎊🎋🎌🎍🎎🎏🎐🎑🎒🎓🦾🦿🧃🧄🧅🧆🧇🎠🎡🎢🎣🎤🎥🧈🎧🎨🎩🎪🎫🎬🎭🎮🎯🎰🎱🎲🎳🎴🎵🎶🎷🎸🎹🎺🎻🎼🎽🎾🎿🏀🏁🏂🏃🏄🏅🏆🏇🏈🏉🏊🧉🧊🧋🏏🏐🏑🏒🏓🧌🧍🧎🧏🧖🧗🧘🧙🧚🧛🧜🧝🏠🏡🏢🏣🏤🏥🏦🧞🏨🏩🏪🏫🏬🏭🏮🏯🏰🧟🏴🧠🧢🏸🏹🏺🧣🧤🧥🧦🧧🐀🐁🐂🐃🐄🐅🐆🐇🐈🐉🐊🐋🐌🐍🐎🐏🐐🐑🐒🐓🐔🐕🐖🐗🐘🐙🐚🐛🐜🐝🐞🐟🐠🐡🐢🐣🐤🐥🐦🐧🐨🐩🐪🐫🐬🐭🐮🐯🐰🐱🐲🐳🐴🐵🐶🐷🐸🐹🐺🐻🐼🐽🐾🧨👀🧩👂👃👄👅👆👇👈👉👊👋👌👍👎👏👐👑👒👓👔👕👖👗👘👙👚👛👜👝👞👟👠👡👢👣👤👥👦👧👨👩👪👫👬👭👮👯👰👱👲👳👴👵👶👷👸👹👺👻👼👽👾👿💀💁💂💃💄💅💆💇💈💉💊💋💌💍💎💏💐💑💒💓💔💕💖💗💘💙💚💛💜💝💞💟💠💡💢💣💤💥💦💧💨💩💪💫💬💭💮💯💰💱💲💳💴💵💶💷💸🧪💺💻💼💽💾💿📀🧫📂📃📄🧬📆📇📈📉📊📋📌📍📎📏📐📒📓📔📕📖📗📘📙📚📛📜📝📞📟📠📡📢📣📤📥📦📧📨📩📪📫📬📭📮📯📰📱📲📳🧭📵📶📷📸📹📺📻📼🧮📿🧯🧰🧱🧲🧳🔅🔆🔇🔈🔉🔊🔋🔌🔍🔎🔏🔐🔑🔒🔓🔔🔕🔖🔗🔘🧴🧵🧶🧷🧸🧹🧺🧻🧼🧽🧾🧿🔥🔦🔧🔨🔩🔪🔫🔬🔭🔮🔯🔰🔱🔲🔳🩰🩱🩲🩳🩴🩸🩹🩺🩻🩼🪀🪁🕋🕌🕍🕎🪂🪃🪄🪅🪆🪐🪑🪒🪓🪔🪕🪖🪗🪘🪙🪚🪛🪜🪝🪞🪟🪠🪡🪢🪣🪤🪥🪦🪧🪨🪩🪪🪫🕺🪬🪰🪱🪲🪳🪴🖕🖖🖤🪵🪶🪷🪸🪹🪺🫀🫁🫂🫃🫄🫅🫐🫑🫒🫓🫔🫕🫖🫗🗻🗼🗽🗾🗿😀😁😂😃😄😅😆😇😈😉😊😋😌😍😎😏😐😑😒😓😔😕😖😗😘😙😚😛😜😝😞😟😠😡😢😣😤😥😦😧😨😩😪😫😬😭😮😯😰😱😲😳😴😵😶😷😸😹😺😻😼😽😾😿🙀🙁🙂🙃🙄🙅🙆🙇🙈🙉🙊🙌🙍🙎🙏🚀🚁🚂🚃🚄🚅🚆🚇🚈🚉🚊🚋🚌🚍🚎🚏🚐🚑🚒🚓🚔🚕🚖🚗🚘🚙🚚🚛🚜🚝🚞🚟🚠🚡🚢🚣🚤🚥🚦🚧🚨🚩🚪🚫🚬🚭🚮🚯🚰🚱🚲🚳🚴🚵🚶🚷🚸🚹🚺🚻🚼🚽🚾🚿🛀🛁🛂🛃🛄🛅🫘🛌🫙🫠🫡🛐🛑🛒🫢🫣🫤🫥🫦🫧🫰🛫🛬🫱🫲🛴🛵🛶🛷🛸🛹🤐🤑🤒🤓🤔🤕🤖🤗🤘🤙🤚🤛🤜🤝🤞🤟🤠🤡🤢🤣🤤🤥🤦🤧🤨🤩🤪🤫🤬🤭🤮🤯🤰🤱🤲🤳🤴🤵🤶🤷🤸🤹🤺🤼🤽🤾🥀🥁🥂🥃🥄🥅🥇🥈🥉🥊🥋🥌🥍🥎🥏🥐🥑🥒🥓🥔🥕🥖🥗🥘🥙🥚🥛🥜🥝🥞🥟🥠🥡🥢🥣🥤🥥🥦🥧🥨🥩🥪🥫🥬🥭🥮🥯🥰🥳🥴🥵🥶🥺🥼🥽🥾🥿🦀🦁🦂🦃🦄🦅🦆🦇🦈🦉🦊🦋🦌🦍🦎🦏🦐🦑🦒🦓🦔🦕🦖🦗🦘🦙🦚🦛🦜🦝🦞🦟🦠🦡🦢🫳🫴🫵🫶🦴🦵🦶🦷🦸🦹🧀🧁🧂🧐🧑🧒🧓🧔🧕"],this.padChars.emojis_v2=["🥷","🛼","📑","🙋","☕"],this.#o(),this.converter=new BaseConverter(1024,5,4),this.padding=!0,this.padCharAmount=5,this.version="emojis_v1",this.isMutable.padding=!0,this.isMutable.trim=!0,this.trim=null,this.utils.converterArgs.trim=["notrim","trim"],this.utils.validateArgs(e,!0),null===this.trim&&(this.trim="emojis_v2"===this.version)}#o(){const e={},t=(e,t)=>{t.forEach((t=>{t in this.#i?this.#i[t].version+=e:this.#i[t]={version:e}}))},s=(t,s,r)=>{s.forEach((s=>{s in e?this.#i[s].version=3:(this.#i[s]={version:t,padding:r},e[s]=r)}))};t(1,this.charsets.emojis_v1),t(2,this.charsets.emojis_v2),s(1,this.padChars.emojis_v1.slice(0,-1),"last"),s(2,this.padChars.emojis_v2.slice(0,-1),"last"),s(1,this.padChars.emojis_v1.slice(-1),"fill"),s(2,this.padChars.emojis_v2.slice(-1),"fill");const r=[];for(const t in e)"last"===e[t]?r.push(t):r.push(`${t}+`);this.#n=new RegExp(r.join("|"),"g")}encode(e,...t){return super.encode(e,null,(({output:e,settings:t,zeroPadding:s})=>{const r=this.charsets[t.version];let i=[...e];if(s>1){const e=this.converter.padBytes(s);if(t.padding){const s=t.trim?1:e,r=new Array(s).fill(this.padChars[t.version].at(-1));i.splice(i.length-e,e,...r)}else i.splice(i.length-e,e)}else if(1===s){const e=r.indexOf(i.pop())>>8;i.push(this.padChars[t.version].at(e))}return i.join("")}),...t)}decode(e,...t){const s=this.utils.validateArgs(t);e=this.utils.normalizeInput(e);let r=s.version,i=null;"emojis_v1"!==s.version&&"emojis_v2"!==s.version||(i=3);const n=e=>{null!==i&&(i=this.#a(e,i,s.integrity),r=3===i?s.version:`emojis_v${i}`);const t=this.charsets[r],n=[...e],o=n.at(-1);let a=!1;for(let s=0;s<this.padChars[r].length-1;s++)if(o===this.padChars[r].at(s)){n.splice(-1,1,t.at(s<<8)),e=n.join(""),a=!0;break}let h=this.converter.decode(e,this.charsets[r],[],!1);return a&&(h=new Uint8Array(h.buffer.slice(0,-1))),h},o=[...e.matchAll(this.#n)];let a;if(o.length<2)a=n(e);else{const t=[];let s=0;o.forEach((r=>{const i=r.index+r.at(0).length;t.push(...n(e.slice(s,i))),s=i})),s!==e.length&&t.push(...n(e.slice(s,e.length))),a=Uint8Array.from(t)}return this.utils.outputHandler.compile(a,s.outputType)}#a(e,t,s){const r=[...e];let i;if(r.forEach(((e,r)=>{if(!(e in this.#i))throw new CharsetError(e);{const n=this.#i[e].version;if(3!==n)if(3===t)t=n;else if(t!==n)throw new TypeError(`Emojis from different ecoji versions seen : ${e} from emojis_v${n}`);if(s){const t=this.#i[e].padding;if(t){const s=r%4;if(i=!0,"fill"===t){if(0===s)throw new TypeError(`Padding unexpectedly seen in first position ${e}`)}else if(3!==s)throw new TypeError(`Last padding seen in unexpected position ${e}`)}else if(i)throw new TypeError("Unexpectedly saw non-padding after padding")}}})),s&&r.length%4&&(1===t||"fill"!==this.#i[r.at(-1)].padding))throw new TypeError("Unexpected end of data, input data size not multiple of 4");return t}}class Base2048 extends BaseTemplate{constructor(...e){super(),this.converter={radix:2048,bsEnc:11,bsEncPad:3,bsDec:8},this.charsets.default=[..."89ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzÆÐØÞßæðøþĐđĦħıĸŁłŊŋŒœŦŧƀƁƂƃƄƅƆƇƈƉƊƋƌƍƎƏƐƑƒƓƔƕƖƗƘƙƚƛƜƝƞƟƢƣƤƥƦƧƨƩƪƫƬƭƮƱƲƳƴƵƶƷƸƹƺƻƼƽƾƿǀǁǂǃǝǤǥǶǷȜȝȠȡȢȣȤȥȴȵȶȷȸȹȺȻȼȽȾȿɀɁɂɃɄɅɆɇɈɉɊɋɌɍɎɏɐɑɒɓɔɕɖɗɘəɚɛɜɝɞɟɠɡɢɣɤɥɦɧɨɩɪɫɬɭɮɯɰɱɲɳɴɵɶɷɸɹɺɻɼɽɾɿʀʁʂʃʄʅʆʇʈʉʊʋʌʍʎʏʐʑʒʓʔʕʖʗʘʙʚʛʜʝʞʟʠʡʢʣʤʥʦʧʨʩʪʫʬʭʮʯͰͱͲͳͶͷͻͼͽͿΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρςστυφχψωϏϗϘϙϚϛϜϝϞϟϠϡϢϣϤϥϦϧϨϩϪϫϬϭϮϯϳϷϸϺϻϼϽϾϿЂЄЅІЈЉЊЋЏАБВГДЕЖЗИКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзиклмнопрстуфхцчшщъыьэюяђєѕіјљњћџѠѡѢѣѤѥѦѧѨѩѪѫѬѭѮѯѰѱѲѳѴѵѸѹѺѻѼѽѾѿҀҁҊҋҌҍҎҏҐґҒғҔҕҖҗҘҙҚқҜҝҞҟҠҡҢңҤҥҦҧҨҩҪҫҬҭҮүҰұҲҳҴҵҶҷҸҹҺһҼҽҾҿӀӃӄӅӆӇӈӉӊӋӌӍӎӏӔӕӘәӠӡӨөӶӷӺӻӼӽӾӿԀԁԂԃԄԅԆԇԈԉԊԋԌԍԎԏԐԑԒԓԔԕԖԗԘԙԚԛԜԝԞԟԠԡԢԣԤԥԦԧԨԩԪԫԬԭԮԯԱԲԳԴԵԶԷԸԹԺԻԼԽԾԿՀՁՂՃՄՅՆՇՈՉՊՋՌՍՎՏՐՑՒՓՔՕՖաբգդեզէըթժիլխծկհձղճմյնշոչպջռսվտրցւփքօֆאבגדהוזחטיךכלםמןנסעףפץצקרשתװױײؠءابةتثجحخدذرزسشصضطظعغػؼؽؾؿفقكلمنهوىي٠١٢٣٤٥٦٧٨٩ٮٯٱٲٳٴٹٺٻټٽپٿڀځڂڃڄڅچڇڈډڊڋڌڍڎڏڐڑڒړڔڕږڗژڙښڛڜڝڞڟڠڡڢڣڤڥڦڧڨکڪګڬڭڮگڰڱڲڳڴڵڶڷڸڹںڻڼڽھڿہۃۄۅۆۇۈۉۊۋیۍێۏېۑےەۮۯ۰۱۲۳۴۵۶۷۸۹ۺۻۼۿܐܒܓܔܕܖܗܘܙܚܛܜܝܞܟܠܡܢܣܤܥܦܧܨܩܪܫܬܭܮܯݍݎݏݐݑݒݓݔݕݖݗݘݙݚݛݜݝݞݟݠݡݢݣݤݥݦݧݨݩݪݫݬݭݮݯݰݱݲݳݴݵݶݷݸݹݺݻݼݽݾݿހށނރބޅކއވމފދތލގޏސޑޒޓޔޕޖޗޘޙޚޛޜޝޞޟޠޡޢޣޤޥޱ߀߁߂߃߄߅߆߇߈߉ߊߋߌߍߎߏߐߑߒߓߔߕߖߗߘߙߚߛߜߝߞߟߠߡߢߣߤߥߦߧߨߩߪࠀࠁࠂࠃࠄࠅࠆࠇࠈࠉࠊࠋࠌࠍࠎࠏࠐࠑࠒࠓࠔࠕࡀࡁࡂࡃࡄࡅࡆࡇࡈࡉࡊࡋࡌࡍࡎࡏࡐࡑࡒࡓࡔࡕࡖࡗࡘࡠࡡࡢࡣࡤࡥࡦࡧࡨࡩࡪࢠࢡࢢࢣࢤࢥࢦࢧࢨࢩࢪࢫࢬࢭࢮࢯࢰࢱࢲࢳࢴࢶࢷࢸࢹࢺࢻࢼࢽऄअआइईउऊऋऌऍऎएऐऑऒओऔकखगघङचछजझञटठडढणतथदधनपफबभमयरलळवशषसहऽॐॠॡ०१२३४५६७८९ॲॳॴॵॶॷॸॹॺॻॼॽॾॿঀঅআইঈউঊঋঌএঐওঔকখগঘঙচছজঝঞটঠডঢণতথদধনপফবভমযরলশষসহঽৎৠৡ০১২৩৪৫৬৭৮৯ৰৱ৴৵৶৷৸৹ৼਅਆਇਈਉਊਏਐਓਔਕਖਗਘਙਚਛਜਝਞਟਠਡਢਣਤਥਦਧਨਪਫਬਭਮਯਰਲਵਸਹੜ੦੧੨੩੪੫੬੭੮੯ੲੳੴઅઆઇઈઉઊઋઌઍએઐઑઓઔકખગઘઙચછજઝઞટઠડઢણતથદધનપફબભમયરલળવશષસહઽૐૠૡ૦૧૨૩૪૫૬૭૮૯ૹଅଆଇଈଉଊଋଌଏଐଓଔକଖଗଘଙଚଛଜଝଞଟଠଡଢଣତଥଦଧନପଫବଭମଯରଲଳଵଶଷସହଽୟୠୡ୦୧୨୩୪୫୬୭୮୯ୱ୲୳୴୵୶୷ஃஅஆஇஈஉஊஎஏஐஒஓகஙசஜஞடணதநனபமயரறலளழவஶஷஸஹௐ௦௧௨௩௪௫௬௭௮௯௰௱௲అఆఇఈఉఊఋఌఎఏఐఒఓఔకఖగఘఙచఛజఝఞటఠడఢణతథదధనపఫబభమయరఱలళఴవశషసహఽౘౙౚౠౡ౦౧౨౩౪౫౬౭౮౯౸౹౺౻౼౽౾ಀಅಆಇಈಉಊಋಌಎಏಐಒಓಔಕಖಗಘಙಚಛಜಝಞಟಠಡಢಣತಥದಧನಪಫಬಭಮಯರಱಲಳವಶಷಸಹಽೞೠೡ೦೧೨೩೪೫೬೭೮೯ೱೲഅആഇഈഉഊഋഌഎഏഐഒഓഔകഖഗഘങചഛജഝഞടഠഡഢണതഥദധനഩപഫബഭമയരറലളഴവശഷസഹഺഽൎൔൕൖ൘൙൚൛൜൝൞ൟൠൡ൦൧൨൩൪൫൬൭൮൯൰൱൲൳൴൵൶൷൸ൺൻർൽൾൿඅආඇඈඉඊඋඌඍඎඏඐඑඒඓඔඕඖකඛගඝඞඟචඡජඣඤඥඦටඨඩඪණඬතථදධනඳපඵබභමඹයරලවශෂසහළෆ෦෧෨෩෪෫෬෭෮෯กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะาเแโใไๅ๐๑๒๓๔๕๖๗๘๙ກຂຄງຈຊຍດຕຖທນບປຜຝພຟມຢຣລວສຫອຮຯະາຽເແໂໃໄ໐໑໒໓໔໕໖໗໘໙ໞໟༀ༠༡༢༣༤༥༦༧༨༩༪༫༬༭༮༯༰༱༲༳ཀཁགངཅཆཇཉཊཋཌཎཏཐདནཔཕབམཙཚཛཝཞཟའཡརལཤཥསཧཨཪཫཬྈྉྊྋྌကခဂဃငစဆဇဈဉညဋဌဍဎဏတထဒဓနပဖဗဘမယရလဝသဟဠအဢဣဤဥဧဨဩဪဿ၀၁၂၃၄၅၆၇၈၉ၐၑၒၓၔၕ"],this.padChars.default=[..."01234567"],this.padCharAmount=8,this.hasSignedMode=!0,this.littleEndian=!1,this.utils.validateArgs(e,!0)}encode(e,...t){const s=this.utils.validateArgs(t);let r=this.utils.inputHandler.toBytes(e,s).at(0);const i=this.charsets[s.version],n=this.padChars[s.version];let o="",a=0,h=0;if(r.forEach((e=>{for(let t=this.converter.bsDec-1;t>=0;t--)a=(a<<1)+(e>>t&1),h++,h===this.converter.bsEnc&&(o+=i.at(a),a=0,h=0)})),0!==h){let e,t;for(h<=this.converter.bsEncPad?(e=this.converter.bsEncPad,t=!0):(e=this.converter.bsEnc,t=!1);h!==e;)if(a=1+(a<<1),h++,h>this.converter.bsEnc)throw new Error("Cannot process input. This is a bug!");o+=t?n.at(a):i.at(a)}return this.utils.wrapOutput(o,s.options.lineWrap)}decode(e,...t){const s=this.utils.validateArgs(t);e=this.utils.normalizeInput(e);const r=[...e],i=this.charsets[s.version],n=this.padChars[s.version],o=new Array;let a=0,h=0;if(r.forEach(((e,t)=>{let l,c=i.indexOf(e);if(c>-1)l=this.converter.bsEnc;else if(c=n.indexOf(e),c>-1){if(t+1!==r.length)throw new Error(`Secondary character found before end of input, index: ${t}`);l=this.converter.bsEncPad}else if(s.integrity)throw new CharsetError(e);for(let e=l-1;e>=0;e--)a=(a<<1)+(c>>e&1),h++,h===this.converter.bsDec&&(o.push(a),a=0,h=0)})),a!==(1<<h)-1)throw new TypeError("Padding mismatch");return this.utils.outputHandler.compile(Uint8Array.from(o),s.outputType)}}class SimpleBase extends BaseTemplate{constructor(e,...t){if(super(),!e||!Number.isInteger(e)||e<2||e>62)throw new RangeError("Radix argument must be provided and has to be an integer between 2 and 62.");this.converter=new BaseConverter(e,0,0),this.charsets.default=[..."0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"].slice(0,e),this.frozenCharsets=!0,this.hasSignedMode=!0,this.littleEndian=!(2===e||16===e),this.signed=!0,this.version="default",this.isMutable.littleEndian=!0,this.isMutable.upper=e<=36,this.utils.validateArgs(t,!0)}encode(e,...t){return super.encode(e,null,null,...t)}decode(e,...t){return super.decode(e,(({input:e})=>{if(2===this.converter.radix){const t=(8-e.length%8)%8;e=`${"0".repeat(t)}${e}`}else if(16===this.converter.radix){const t=e.length%2;e=`${"0".repeat(t)}${e}`}return e}),null,!1,...t)}}var DP=20,RM=1,MAX_DP=1e6,MAX_POWER=1e6,NE=-7,PE=21,STRICT=!1,NAME="[big.js] ",INVALID=NAME+"Invalid ",INVALID_DP=INVALID+"decimal places",INVALID_RM=INVALID+"rounding mode",DIV_BY_ZERO=NAME+"Division by zero",P={},UNDEFINED=void 0,NUMERIC=/^-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i;function _Big_(){function e(t){var s=this;if(!(s instanceof e))return t===UNDEFINED?_Big_():new e(t);if(t instanceof e)s.s=t.s,s.e=t.e,s.c=t.c.slice();else{if("string"!=typeof t){if(!0===e.strict&&"bigint"!=typeof t)throw TypeError(INVALID+"value");t=0===t&&1/t<0?"-0":String(t)}parse(s,t)}s.constructor=e}return e.prototype=P,e.DP=DP,e.RM=RM,e.NE=NE,e.PE=PE,e.strict=STRICT,e.roundDown=0,e.roundHalfUp=1,e.roundHalfEven=2,e.roundUp=3,e}function parse(e,t){var s,r,i;if(!NUMERIC.test(t))throw Error(INVALID+"number");for(e.s="-"==t.charAt(0)?(t=t.slice(1),-1):1,(s=t.indexOf("."))>-1&&(t=t.replace(".","")),(r=t.search(/e/i))>0?(s<0&&(s=r),s+=+t.slice(r+1),t=t.substring(0,r)):s<0&&(s=t.length),i=t.length,r=0;r<i&&"0"==t.charAt(r);)++r;if(r==i)e.c=[e.e=0];else{for(;i>0&&"0"==t.charAt(--i););for(e.e=s-r-1,e.c=[],s=0;r<=i;)e.c[s++]=+t.charAt(r++)}return e}function round(e,t,s,r){var i=e.c;if(s===UNDEFINED&&(s=e.constructor.RM),0!==s&&1!==s&&2!==s&&3!==s)throw Error(INVALID_RM);if(t<1)r=3===s&&(r||!!i[0])||0===t&&(1===s&&i[0]>=5||2===s&&(i[0]>5||5===i[0]&&(r||i[1]!==UNDEFINED))),i.length=1,r?(e.e=e.e-t+1,i[0]=1):i[0]=e.e=0;else if(t<i.length){if(r=1===s&&i[t]>=5||2===s&&(i[t]>5||5===i[t]&&(r||i[t+1]!==UNDEFINED||1&i[t-1]))||3===s&&(r||!!i[0]),i.length=t,r)for(;++i[--t]>9;)if(i[t]=0,0===t){++e.e,i.unshift(1);break}for(t=i.length;!i[--t];)i.pop()}return e}function stringify(e,t,s){var r=e.e,i=e.c.join(""),n=i.length;if(t)i=i.charAt(0)+(n>1?"."+i.slice(1):"")+(r<0?"e":"e+")+r;else if(r<0){for(;++r;)i="0"+i;i="0."+i}else if(r>0)if(++r>n)for(r-=n;r--;)i+="0";else r<n&&(i=i.slice(0,r)+"."+i.slice(r));else n>1&&(i=i.charAt(0)+"."+i.slice(1));return e.s<0&&s?"-"+i:i}P.abs=function(){var e=new this.constructor(this);return e.s=1,e},P.cmp=function(e){var t,s=this,r=s.c,i=(e=new s.constructor(e)).c,n=s.s,o=e.s,a=s.e,h=e.e;if(!r[0]||!i[0])return r[0]?n:i[0]?-o:0;if(n!=o)return n;if(t=n<0,a!=h)return a>h^t?1:-1;for(o=(a=r.length)<(h=i.length)?a:h,n=-1;++n<o;)if(r[n]!=i[n])return r[n]>i[n]^t?1:-1;return a==h?0:a>h^t?1:-1},P.div=function(e){var t=this,s=t.constructor,r=t.c,i=(e=new s(e)).c,n=t.s==e.s?1:-1,o=s.DP;if(o!==~~o||o<0||o>MAX_DP)throw Error(INVALID_DP);if(!i[0])throw Error(DIV_BY_ZERO);if(!r[0])return e.s=n,e.c=[e.e=0],e;var a,h,l,c,u,d=i.slice(),f=a=i.length,p=r.length,g=r.slice(0,a),v=g.length,w=e,y=w.c=[],m=0,b=o+(w.e=t.e-e.e)+1;for(w.s=n,n=b<0?0:b,d.unshift(0);v++<a;)g.push(0);do{for(l=0;l<10;l++){if(a!=(v=g.length))c=a>v?1:-1;else for(u=-1,c=0;++u<a;)if(i[u]!=g[u]){c=i[u]>g[u]?1:-1;break}if(!(c<0))break;for(h=v==a?i:d;v;){if(g[--v]<h[v]){for(u=v;u&&!g[--u];)g[u]=9;--g[u],g[v]+=10}g[v]-=h[v]}for(;!g[0];)g.shift()}y[m++]=c?l:++l,g[0]&&c?g[v]=r[f]||0:g=[r[f]]}while((f++<p||g[0]!==UNDEFINED)&&n--);return y[0]||1==m||(y.shift(),w.e--,b--),m>b&&round(w,b,s.RM,g[0]!==UNDEFINED),w},P.eq=function(e){return 0===this.cmp(e)},P.gt=function(e){return this.cmp(e)>0},P.gte=function(e){return this.cmp(e)>-1},P.lt=function(e){return this.cmp(e)<0},P.lte=function(e){return this.cmp(e)<1},P.minus=P.sub=function(e){var t,s,r,i,n=this,o=n.constructor,a=n.s,h=(e=new o(e)).s;if(a!=h)return e.s=-h,n.plus(e);var l=n.c.slice(),c=n.e,u=e.c,d=e.e;if(!l[0]||!u[0])return u[0]?e.s=-h:l[0]?e=new o(n):e.s=1,e;if(a=c-d){for((i=a<0)?(a=-a,r=l):(d=c,r=u),r.reverse(),h=a;h--;)r.push(0);r.reverse()}else for(s=((i=l.length<u.length)?l:u).length,a=h=0;h<s;h++)if(l[h]!=u[h]){i=l[h]<u[h];break}if(i&&(r=l,l=u,u=r,e.s=-e.s),(h=(s=u.length)-(t=l.length))>0)for(;h--;)l[t++]=0;for(h=t;s>a;){if(l[--s]<u[s]){for(t=s;t&&!l[--t];)l[t]=9;--l[t],l[s]+=10}l[s]-=u[s]}for(;0===l[--h];)l.pop();for(;0===l[0];)l.shift(),--d;return l[0]||(e.s=1,l=[d=0]),e.c=l,e.e=d,e},P.mod=function(e){var t,s=this,r=s.constructor,i=s.s,n=(e=new r(e)).s;if(!e.c[0])throw Error(DIV_BY_ZERO);return s.s=e.s=1,t=1==e.cmp(s),s.s=i,e.s=n,t?new r(s):(i=r.DP,n=r.RM,r.DP=r.RM=0,s=s.div(e),r.DP=i,r.RM=n,this.minus(s.times(e)))},P.neg=function(){var e=new this.constructor(this);return e.s=-e.s,e},P.plus=P.add=function(e){var t,s,r,i=this,n=i.constructor;if(e=new n(e),i.s!=e.s)return e.s=-e.s,i.minus(e);var o=i.e,a=i.c,h=e.e,l=e.c;if(!a[0]||!l[0])return l[0]||(a[0]?e=new n(i):e.s=i.s),e;if(a=a.slice(),t=o-h){for(t>0?(h=o,r=l):(t=-t,r=a),r.reverse();t--;)r.push(0);r.reverse()}for(a.length-l.length<0&&(r=l,l=a,a=r),t=l.length,s=0;t;a[t]%=10)s=(a[--t]=a[t]+l[t]+s)/10|0;for(s&&(a.unshift(s),++h),t=a.length;0===a[--t];)a.pop();return e.c=a,e.e=h,e},P.pow=function(e){var t=this,s=new t.constructor("1"),r=s,i=e<0;if(e!==~~e||e<-MAX_POWER||e>MAX_POWER)throw Error(INVALID+"exponent");for(i&&(e=-e);1&e&&(r=r.times(t)),e>>=1;)t=t.times(t);return i?s.div(r):r},P.prec=function(e,t){if(e!==~~e||e<1||e>MAX_DP)throw Error(INVALID+"precision");return round(new this.constructor(this),e,t)},P.round=function(e,t){if(e===UNDEFINED)e=0;else if(e!==~~e||e<-MAX_DP||e>MAX_DP)throw Error(INVALID_DP);return round(new this.constructor(this),e+this.e+1,t)},P.sqrt=function(){var e,t,s,r=this,i=r.constructor,n=r.s,o=r.e,a=new i("0.5");if(!r.c[0])return new i(r);if(n<0)throw Error(NAME+"No square root");0===(n=Math.sqrt(r+""))||n===1/0?((t=r.c.join("")).length+o&1||(t+="0"),o=((o+1)/2|0)-(o<0||1&o),e=new i(((n=Math.sqrt(t))==1/0?"5e":(n=n.toExponential()).slice(0,n.indexOf("e")+1))+o)):e=new i(n+""),o=e.e+(i.DP+=4);do{s=e,e=a.times(s.plus(r.div(s)))}while(s.c.slice(0,o).join("")!==e.c.slice(0,o).join(""));return round(e,(i.DP-=4)+e.e+1,i.RM)},P.times=P.mul=function(e){var t,s=this,r=s.constructor,i=s.c,n=(e=new r(e)).c,o=i.length,a=n.length,h=s.e,l=e.e;if(e.s=s.s==e.s?1:-1,!i[0]||!n[0])return e.c=[e.e=0],e;for(e.e=h+l,o<a&&(t=i,i=n,n=t,l=o,o=a,a=l),t=new Array(l=o+a);l--;)t[l]=0;for(h=a;h--;){for(a=0,l=o+h;l>h;)a=t[l]+n[h]*i[l-h-1]+a,t[l--]=a%10,a=a/10|0;t[l]=a}for(a?++e.e:t.shift(),h=t.length;!t[--h];)t.pop();return e.c=t,e},P.toExponential=function(e,t){var s=this,r=s.c[0];if(e!==UNDEFINED){if(e!==~~e||e<0||e>MAX_DP)throw Error(INVALID_DP);for(s=round(new s.constructor(s),++e,t);s.c.length<e;)s.c.push(0)}return stringify(s,!0,!!r)},P.toFixed=function(e,t){var s=this,r=s.c[0];if(e!==UNDEFINED){if(e!==~~e||e<0||e>MAX_DP)throw Error(INVALID_DP);for(e=e+(s=round(new s.constructor(s),e+s.e+1,t)).e+1;s.c.length<e;)s.c.push(0)}return stringify(s,!1,!!r)},P[Symbol.for("nodejs.util.inspect.custom")]=P.toJSON=P.toString=function(){var e=this,t=e.constructor;return stringify(e,e.e<=t.NE||e.e>=t.PE,!!e.c[0])},P.toNumber=function(){var e=Number(stringify(this,!0,!0));if(!0===this.constructor.strict&&!this.eq(e.toString()))throw Error(NAME+"Imprecise conversion");return e},P.toPrecision=function(e,t){var s=this,r=s.constructor,i=s.c[0];if(e!==UNDEFINED){if(e!==~~e||e<1||e>MAX_DP)throw Error(INVALID+"precision");for(s=round(new r(s),e,t);s.c.length<e;)s.c.push(0)}return stringify(s,e<=s.e||s.e<=r.NE||s.e>=r.PE,!!i)},P.valueOf=function(){var e=this,t=e.constructor;if(!0===t.strict)throw Error(NAME+"valueOf disallowed");return stringify(e,e.e<=t.NE||e.e>=t.PE,!0)};var Big=_Big_();class BasePhi extends BaseTemplate{#h=Big("1.618033988749894848204586834365638117720309179805762862135448622705260462818902449707207204189391137484754088075386891752");constructor(...e){super(),this.converter={radix:2,bsEnc:0,bsDec:0},this.b10=new BaseConverter(10,0,0),this.charsets.default=["0","1"],this.version="default",this.signed=!0,this.utils.validateArgs(e,!0),this.isMutable.integrity=!1}encode(e,...t){const s=this.utils.validateArgs(t),r=this.charsets[s.version];let i,n,o,a="";if(s.decimalMode){if(!Number.isFinite(e))throw new TypeError("When running the converter in 'decimalMode' only input of type Number is allowed.");e<0?(n=!0,o=Big(-e)):(n=!1,o=Big(e))}else[i,n]=this.utils.inputHandler.toBytes(e,s),o=Big(this.b10.encode(i,null,s.littleEndian)[0]);if(o.eq(0)||o.eq(1))return a=r[o.toNumber()],n&&(a=`-${a}`),a;const h=[],l=[];let c=Big(1),u=this.#h,d=0;for(;u.lt(o);)[c,u]=this.#l(c,u),d++;const f=(e,t,s)=>{if(this.#c(o))console.warn(0);else{for(;e.gt(o);){if([e,t]=this.#u(e,t),e.lte(0))return void console.warn("below 0");s--}s>-1?h.unshift(s):l.push(s),o=o.minus(e),f(e,t,s)}};return f(c,u,d),d=0,h.forEach((e=>{for(;d<e;)a=`${r[0]}${a}`,d++;a=`${r[1]}${a}`,d++})),a?a+=".":a="0.",d=-1,l.forEach((e=>{for(;d>e;)a+=r[0],d--;a+=r[1],d--})),n&&(a=`-${a}`),a}decode(e,...t){const s=this.utils.validateArgs(t),r=this.charsets[s.version];let i;[e,i]=this.utils.extractSign(this.utils.normalizeInput(e));const[n,o]=e.split(".");let a=Big(0),h=this.#h.minus(1),l=Big(1);if([...n].reverse().forEach((e=>{const t=r.indexOf(e);if(1===t)a=a.plus(l);else if(0!==t)throw new CharsetError(e);[h,l]=this.#l(h,l)})),o){let e=Big(1);l=this.#h.minus(e),[...o].forEach((t=>{const s=r.indexOf(t);if(1===s)a=a.plus(l);else if(0!==s)throw new CharsetError(t);[l,e]=this.#u(l,e)}))}if(s.decimalMode)return a.toNumber();a=a.round().toFixed();const c=this.b10.decode(a,[..."0123456789"],[],s.integrity,s.littleEndian);return this.utils.outputHandler.compile(c,s.outputType,s.littleEndian,i)}#c(e){return!e.round(50).abs().toNumber()}#l(e,t){return[t,e.plus(t)]}#u(e,t){return[t.minus(e),e]}}const LITTLE_ENDIAN=(()=>{const e=new Uint16Array([1]),t=new Uint8Array(e.buffer);return Boolean(t.at(0))})();class ByteConverter{constructor(...e){this.littleEndian=LITTLE_ENDIAN,this.numberMode=!1,this.outputType="buffer",this.utils={validateArgs:(e,t=!1)=>{const s={littleEndian:this.littleEndian,numberMode:this.numberMode,outputType:this.outputType,signed:!1};if(!e.length)return s;e.includes("number")&&(e.splice(e.indexOf("number"),1),s.numberMode=!0,s.outputType="float_n");const r=SmartOutput.typeList.map((e=>`'${e}'`)).join(", ");if(e.forEach((e=>{if("le"===(e=String(e).toLowerCase()))s.littleEndian=!0;else if("be"===e)s.littleEndian=!1;else{if(!SmartOutput.typeList.includes(e))throw new TypeError(`Invalid argument: '${e}.\nValid arguments are:\n'le', 'be', ${r}`);s.outputType=e}})),t)for(const e in s)this[e]=s[e];return s}},this.utils.validateArgs(e,!0)}encode(e,...t){const s=this.utils.validateArgs(t);return SmartInput.toBytes(e,s)[0]}decode(e,...t){const s=this.utils.validateArgs(t);return SmartOutput.compile(e,s.outputType,s.littleEndian)}}
/**
 * [BaseEx]{@link https://github.com/UmamiAppearance/BaseExJS}
 *
 * @version 0.5.0
 * @author UmamiAppearance [mail@umamiappearance.eu]
 * @license GPL-3.0 AND BSD-3-Clause (only regarding Base91, Copyright (c) 2000-2006 Joachim Henke)
 */class BaseEx{constructor(e="buffer"){if(!DEFAULT_OUTPUT_HANDLER.typeList.includes(e)){let t=`Invalid argument '${e}' for output type. Allowed types are:\n`;throw t=t.concat(DEFAULT_OUTPUT_HANDLER.typeList.join(", ")),new TypeError(t)}this.base1=new Base1("default",e),this.base16=new Base16("default",e),this.base32_crockford=new Base32("rfc4648",e),this.base32_rfc3548=new Base32("rfc3548",e),this.base32_rfc4648=new Base32("rfc4648",e),this.base32_zbase32=new Base32("zbase32",e),this.base58=new Base58("default",e),this.base58_bitcoin=new Base58("bitcoin",e),this.base58_flickr=new Base58("flickr",e),this.base64=new Base64("default",e),this.base64_urlsafe=new Base64("urlsafe",e),this.uuencode=new UUencode("default",e),this.xxencode=new UUencode("xx",e),this.base85_adobe=new Base85("adobe",e),this.base85_ascii=new Base85("ascii85",e),this.base85_z85=new Base85("z85",e),this.base91=new Base91("default",e),this.leb128=new LEB128("default",e),this.ecoji_v1=new Ecoji("emojis_v1",e),this.ecoji_v2=new Ecoji("emojis_v2",e),this.base2048=new Base2048("default",e),this.byteConverter=new ByteConverter(e),this.simpleBase={};for(let t=2;t<=62;t++)this.simpleBase[`base${t}`]=new SimpleBase(t,e)}}export{Base1,Base16,Base2048,Base32,Base58,Base64,Base85,Base91,BaseEx,BasePhi,ByteConverter,Ecoji,LEB128,SimpleBase,UUencode};
