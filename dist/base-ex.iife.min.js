var BaseEx=function(e){"use strict";class t{static toBytes(e){return ArrayBuffer.isView(e)&&(e=e.buffer),[new Uint8Array(e),!1,"bytes"]}}class s{static get typeList(){return["buffer","bytes","uint8","view"]}static getType(e){if(!s.typeList.includes(e))throw new TypeError(`Unknown output type: '${e}'`);return e}static compile(e,t){let i;return i="buffer"===(t=s.getType(t))?e.buffer:"view"===t?new DataView(e.buffer):e,i}}class i{static makeDataView(e){const t=new ArrayBuffer(e);return new DataView(t)}static floatingPoints(e,t=!1){const s=this.makeDataView(8);return s.setFloat64(0,e,t),s}static numbers(e,t=!1){let s,i;if(Number.isInteger(e)){if(i="int",!Number.isSafeInteger(e)){let t,s,i;throw e<0?(t=Number.MIN_SAFE_INTEGER,s="smaller",i="MIN"):(t=Number.MAX_SAFE_INTEGER,s="bigger",i="MAX"),new RangeError(`The provided integer is ${s} than ${i}_SAFE_INTEGER: '${t}'\nData integrity is not guaranteed. Use a BigInt to avoid this issue.\n(If you see this error although a float was provided, the input has to many digits before the decimal point to store the decimal places in a float with 64 bits.)`)}e<0?e<-2147483648?(s=this.makeDataView(8),s.setBigInt64(0,BigInt(e),t)):e<-32768?(s=this.makeDataView(4),s.setInt32(0,e,t)):(s=this.makeDataView(2),s.setInt16(0,e,t)):e>0?e>4294967295?(s=this.makeDataView(8),s.setBigUint64(0,BigInt(e),t)):e>65535?(s=this.makeDataView(4),s.setUint32(0,e,t)):(s=this.makeDataView(2),s.setInt16(0,e,t)):s=new Uint16Array([0])}else i="float",s=this.floatingPoints(e,t);return[new Uint8Array(s.buffer),i]}static bigInts(e,t=!1){const s=new Array,i=t?"push":"unshift",n=18446744073709551616n;if(e<0)for(;e<-9223372036854775808n;)s[i](e%n),e>>=64n;else for(;e>=n;)s[i](e%n),e>>=64n;s[i](e);const r=8*s.length,o=this.makeDataView(r);return s.forEach(((e,s)=>{const i=8*s;o.setBigUint64(i,e,t)})),new Uint8Array(o.buffer)}static toBytes(e,t){let s,i=!1,n="bytes";if(e instanceof ArrayBuffer)s=new Uint8Array(e.slice());else if(ArrayBuffer.isView(e))s=new Uint8Array(e.buffer.slice());else if("string"==typeof e||e instanceof String)s=(new TextEncoder).encode(e);else if("number"==typeof e){if(isNaN(e))throw new TypeError("Cannot proceed. Input is NaN.");if(e==1/0)throw new TypeError("Cannot proceed. Input is Infinity.");if(t.signed&&e<0&&(i=!0,e=-e),t.numberMode){const i=this.floatingPoints(e,t.littleEndian);s=new Uint8Array(i.buffer),n="float"}else[s,n]=this.numbers(e,t.littleEndian)}else if("bigint"==typeof e)t.signed&&e<0&&(i=!0,e*=-1n),s=this.bigInts(e,t.littleEndian),n="int";else{if(!Array.isArray(e))throw new TypeError("The provided input type can not be processed.");{const i=new Array;for(const s of e)i.push(...this.toBytes(s,t)[0]);s=Uint8Array.from(i)}}return[s,i,n]}}class n{static get typeList(){return["bigint64","bigint_n","biguint64","buffer","bytes","float32","float64","float_n","int8","int16","int32","int_n","str","uint8","uint16","uint32","uint_n","view"]}static getType(e){if(!this.typeList.includes(e))throw new TypeError(`Unknown output type: '${e}'`);return e}static makeTypedArrayBuffer(e,t,s,i){const n=e.byteLength,r=(t-e.byteLength%t)%t,o=i&&n>1?255:0;let a=e;if(r){a=new Uint8Array(n+r),a.fill(o);const t=s?0:r;a.set(e,t)}return a.buffer}static makeTypedArray(e,t,s,i){let n;if("int16"===t||"uint16"===t){const r=this.makeTypedArrayBuffer(e,2,s,i);n="int16"===t?new Int16Array(r):new Uint16Array(r)}else if("int32"===t||"uint32"===t||"float32"===t){const r=this.makeTypedArrayBuffer(e,4,s,i);n="int32"===t?new Int32Array(r):"uint32"===t?new Uint32Array(r):new Float32Array(r)}else if("bigint64"===t||"biguint64"===t||"float64"===t){const r=this.makeTypedArrayBuffer(e,8,s,i);n="bigint64"===t?new BigInt64Array(r):"biguint64"===t?new BigUint64Array(r):new Float64Array(r)}return n}static compile(e,t,s=!1,n=!1){let r;if(t=this.getType(t),n){let n;if(n=t.match(/^float/)?-this.compile(e,"float_n",s):-this.compile(e,"uint_n",s),"float_n"===t)return n;e=i.toBytes(n,{littleEndian:s,numberMode:!1,signed:!1})[0]}if("buffer"===t)r=e.buffer;else if("bytes"===t||"uint8"===t)r=e;else if("int8"===t)r=new Int8Array(e.buffer);else if("view"===t)r=new DataView(e.buffer);else if("str"===t)r=(new TextDecoder).decode(e);else if("uint_n"===t||"int_n"===t||"bigint_n"===t){if(1===e.length){const t=this.makeTypedArrayBuffer(e,2,s,n);e=new Uint8Array(t)}s&&e.reverse();let i=0n;e.forEach((e=>i=(i<<8n)+BigInt(e))),"uint_n"!==t&&(i=BigInt.asIntN(8*e.length,i)),r="bigint_n"!==t&&i>=Number.MIN_SAFE_INTEGER&&i<=Number.MAX_SAFE_INTEGER?Number(i):i}else if("float_n"===t)if(e.length<=4){let t;t=4===e.length?e:this.makeTypedArray(e,"float32",!1,n);r=new DataView(t.buffer).getFloat32(0,s)}else{if(!(e.length<=8))throw new RangeError("The provided input is to complex to be converted into a floating point.");{let t;t=8===e.length?e:this.makeTypedArray(e,"float64",!1,n);r=new DataView(t.buffer).getFloat64(0,s)}}else if("number"===t){if(8!==e.length)throw new TypeError("Type mismatch. Cannot convert into number.");const t=new Float64Array(e.buffer);r=Number(t)}else r=this.makeTypedArray(e,t,s,n);return r}}const r=i,o=n;class a extends TypeError{constructor(){super("The input is signed but the converter is not set to treat input as signed.\nYou can pass the string 'signed' to the decode function or when constructing the converter."),this.name="SignError"}}class l{constructor(e,t=!0){this.root=e,this.converterArgs={},"charsets"in e&&t&&this.#e()}setIOHandlers(e=r,t=o){this.inputHandler=e,this.outputHandler=t}#e(){this.root.addCharset=(e,t)=>{if("string"!=typeof e)throw new TypeError("The charset name must be a string.");const s=this.root.converter.radix;let i=s;if("string"==typeof t||Array.isArray(t))i=t.length,t=new Set(t);else if(!(t instanceof Set))throw new TypeError("The charset must be one of the types:\n'str', 'set', 'array'.");if(t.size!==s)throw i===s?new Error("There were repetitive chars found in your charset. Make sure each char is unique."):new Error(`The length of the charset must be ${s}.`);t=[...t].join(""),this.root.charsets[e]=t,console.info(`New charset '${e}' was added and is ready to use`)},this.root.setDefaultCharset=e=>{({version:e}=this.validateArgs([e])),this.root.version=e}}makeArgList(e){return e.map((e=>`'${e}'`)).join(", ")}toSignedStr(e,t){return e=e.replace(/^0+(?!$)/,""),t&&(e="-".concat(e)),e}extractSign(e){let t=!1;return"-"===e[0]&&(t=!0,e=e.slice(1)),[e,t]}invalidArgument(e,t,s,i){const n=i?"\n * valid declarations for IO handlers are 'bytesOnly', 'bytesIn', 'bytesOut'":"",r=this.root.isMutable.signed?"\n * pass 'signed' to disable, 'unsigned' to enable the use of the twos's complement for negative integers":"",o=this.root.isMutable.littleEndian?"\n * 'be' for big , 'le' for little endian byte order for case conversion":"",a=this.root.isMutable.padding?"\n * pass 'pad' to fill up, 'nopad' to not fill up the output with the particular padding":"",l=this.root.isMutable.upper?"\n * valid args for changing the encoded output case are 'upper' and 'lower'":"",h=`\n * valid args for the output type are ${this.makeArgList(s)}`,u=t?`\n * the options for version (charset) are: ${this.makeArgList(t)}`:"",c=Object.keys(this.converterArgs).length?`\n * converter specific args:\n   - ${(()=>Object.keys(this.converterArgs).map((e=>this.converterArgs[e].map((e=>`'${e}'`)).join(" and "))).join("\n   - "))()}`:"";throw new TypeError(`'${e}'\n\nInput parameters:${n}${r}${o}${a}${l}${h}${u}\n * 'number' for number-mode (converts every number into a Float64Array to keep the natural js number type)${c}\n\nTraceback:`)}validateArgs(e,i=!1){const n={littleEndian:this.root.littleEndian,numberMode:this.root.numberMode,outputType:this.root.outputType,padding:this.root.padding,signed:this.root.signed,upper:this.root.upper,version:this.root.version};for(const e in this.converterArgs)n[e]=this.root[e];if(!e.length)return i&&this.setIOHandlers(),n;const a=t=>!!e.includes(t)&&(e.splice(e.indexOf(t),1),!0),l=Object.prototype.hasOwnProperty.call(this.root,"charsets")?Object.keys(this.root.charsets):[],h={littleEndian:["be","le"],padding:["nopad","pad"],signed:["unsigned","signed"],upper:["lower","upper"],...this.converterArgs};if(i)if(a("bytes_only"))this.setIOHandlers(t,s);else{const e=a("bytes_in")?t:r,i=a("bytes_out")?s:o;this.setIOHandlers(e,i)}const u=this.outputHandler.typeList;if(a("number")&&(n.numberMode=!0,n.outputType="float_n"),e.forEach((e=>{if(e=String(e).toLowerCase(),l.includes(e))n.version=e;else if(u.includes(e))n.outputType=e;else{let t=!0;for(const s in h)if(h[s].includes(e)){if(t=!1,!this.root.isMutable[s])throw TypeError(`Argument '${e}' is not allowed for this type of converter.`);n[s]=Boolean(h[s].indexOf(e))}t&&this.invalidArgument(e,l,u,i)}})),n.padding&&n.signed&&(n.padding=!1,console.warn("Padding was set to false due to the signed conversion.")),i)for(const e in n)this.root[e]=n[e];return n}signError(){throw new a}}class h{constructor(e,t=null,s=null,i=0){this.radix=e,null!==t&&null!==s?(this.bsEnc=t,this.bsDec=s):[this.bsEnc,this.bsDec]=this.constructor.guessBS(e),this.decPadVal=i}static guessBS(e){let t=e<8?e:Math.ceil(256/e);for(;t>8&&!(t%8);)t/=8;let s=0;for(;8*s*Math.log(2)/Math.log(e)<t;)s++;return[s,Math.ceil(8*s*Math.log(2)/Math.log(e))]}encode(e,t,s=!1,i=null){let n=this.bsEnc;0===n&&(n=e.byteLength);let r="";const o=n?(n-e.length%n)%n:0,a=new Array(o).fill(0);let l;if(s?(e.reverse(),l=[...a,...e]):l=[...e,...a],10===this.radix){let e=0n;for(let t=0;t<n;t++)e=(e<<8n)+BigInt(l[t]);return[e.toString(),0]}for(let e=0,s=l.length;e<s;e+=n){let s=0n;for(let t=e;t<e+n;t++)s=(s<<8n)+BigInt(l[t]);const a=new Array;let h,u=s;for(;u>=this.radix;)[u,h]=this.divmod(u,this.radix),a.unshift(parseInt(h,10));for(a.unshift(parseInt(u,10));a.length<this.bsDec;)a.unshift(0);let c="";a.forEach((e=>c=c.concat(t[e]))),i&&(c=i(c,o)),r=r.concat(c)}return[r,o]}decode(e,t,s=!1){if(!e)return new Uint8Array(0);let i=this.bsDec;const n=new Array;let r;if(Array.isArray(t)?[...e].forEach((e=>{const s=t.indexOf(e);s>-1&&n.push(s)})):[...e].forEach((e=>{e in t&&n.push(t[e])})),0===i)i=n.length;else{r=(i-n.length%i)%i;const e=new Array(r).fill(this.decPadVal);s?n.unshift(...e):n.push(...e)}let o=new Array;for(let e=0,t=n.length;e<t;e+=i){let t=0n;for(let s=0;s<i;s++)t+=BigInt(n[e+s])*this.pow(i-1-s);const s=new Array;let r,a=t;for(;a>=256;)[a,r]=this.divmod(a,256),s.unshift(parseInt(r,10));for(s.unshift(parseInt(a,10));s.length<this.bsEnc;)s.unshift(0);o=o.concat(s)}if(s){if(o.length>1){for(;!o[0];)o.shift();o.length||o.push(0),o.reverse()}}else if(this.bsDec){const e=this.padChars(r);o.splice(o.length-e)}return Uint8Array.from(o)}padBytes(e){return Math.floor(e*this.bsDec/this.bsEnc)}padChars(e){return Math.ceil(e*this.bsEnc/this.bsDec)}pow(e){return BigInt(this.radix)**BigInt(e)}divmod(e,t){return[e,t]=[BigInt(e),BigInt(t)],[e/t,e%t]}}class u{constructor(e=!0){this.charsets={},this.hasSignedMode=!1,this.littleEndian=!1,this.numberMode=!1,this.outputType="buffer",this.padding=!1,this.signed=!1,this.upper=null,e&&(this.utils=new l(this)),this.version="default",this.isMutable={littleEndian:!1,padding:!1,signed:!1,upper:!1}}encode(e,t,s,...i){const n=this.utils.validateArgs(i);let r,o,a;[r,o,a]=this.utils.inputHandler.toBytes(e,n);let l=null;t&&(l=t(n));let[h,u]=this.converter.encode(r,this.charsets[n.version],n.littleEndian,l);return n.signed&&(h=this.utils.toSignedStr(h,o)),n.upper&&(h=h.toUpperCase()),s&&(h=s({inputBytes:r,output:h,settings:n,zeroPadding:u,type:a})),h}decode(e,t,s,...i){const n=this.utils.validateArgs(i);e=String(e);let r=!1;this.hasSignedMode&&([e,r]=this.utils.extractSign(e),r&&!n.signed&&this.utils.signError()),this.isMutable.upper&&(e=e.toLowerCase()),t&&(e=t({input:e,settings:n}));let o=this.converter.decode(e,this.charsets[n.version],n.littleEndian);return s&&(o=s({input:e,output:o,settings:n})),this.utils.outputHandler.compile(o,n.outputType,n.littleEndian,r)}}class c extends u{constructor(...e){super(),delete this.addCharset,this.charsets.all=[..." !\"#$%&'()*+,./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~"],this.charsets.sequence=[..."Hello World!"],this.charsets.default=["1"],this.charsets.tmark=["|","#"],this.converter=new h(10,0,0),this.hasSignedMode=!0,this.littleEndian=!0,this.signed=!0,this.isMutable.signed=!0,this.isMutable.upper=!0,this.utils.validateArgs(e,!0)}encode(e,...t){const s=this.utils.validateArgs(t);let i,n;[i,n]=this.utils.inputHandler.toBytes(e,s);let r=this.converter.encode(i,null,s.littleEndian)[0],o=BigInt(r);if(o>Number.MAX_SAFE_INTEGER)throw new RangeError("Invalid string length.");o>16777216&&console.warn("The string length is really long. The JavaScript engine may have memory issues generating the output string."),o=Number(o);const a=this.charsets[s.version],l=a.length;let h="";if(1===l)h=a.at(0).repeat(o);else if("all"===s.version)for(let e=0;e<o;e++){h+=a[Math.floor(Math.random()*l)]}else if("tmark"===s.version){const e=o%5;o>4&&(h=a.at(1).repeat((o-e)/5)),h+=a.at(0).repeat(e)}else for(let e=0;e<o;e++)h+=a[e%l];return h=this.utils.toSignedStr(h,n),s.upper&&(h=h.toUpperCase()),h}decode(e,...t){const s=this.utils.validateArgs(t);let i;if(e=String(e),[e,i]=this.utils.extractSign(e),"all"!==s.version){const t=[...new Set(this.charsets[s.version])].join(""),i=new RegExp(`[^${t}]`,"g");e=e.replace(i,"")}e=String(e.length);const n=this.converter.decode(e,[..."0123456789"],s.littleEndian);return this.utils.outputHandler.compile(n,s.outputType,s.littleEndian,i)}}class d extends u{constructor(...e){super(),this.converter=new h(16,1,2),this.charsets.default=[..."0123456789abcdef"],this.hasSignedMode=!0,this.isMutable.signed=!0,this.isMutable.upper=!0,this.utils.validateArgs(e,!0)}encode(e,...t){return super.encode(e,null,null,...t)}decode(e,...t){return super.decode(e,(e=>{let{input:t}=e;return t=t.replace(/^0x/,""),t.length%2&&(t="0".concat(t)),t}),null,...t)}}class p extends u{constructor(...e){super(),this.charsets.crockford=[..."0123456789abcdefghjkmnpqrstvwxyz"],this.charsets.rfc3548=[..."abcdefghijklmnopqrstuvwxyz234567"],this.charsets.rfc4648=[..."0123456789abcdefghijklmnopqrstuv"],this.charsets.zbase32=[..."ybndrfg8ejkmcpqxot1uwisza345h769"],this.converter=new h(32,5,8),this.hasSignedMode=!0,this.padding=!0,this.version="rfc4648",this.isMutable.littleEndian=!0,this.isMutable.padding=!0,this.isMutable.signed=!0,this.isMutable.upper=!0,this.utils.validateArgs(e,!0)}encode(e,...t){return super.encode(e,null,(e=>{let{output:t,settings:s,zeroPadding:i}=e;if(!s.littleEndian&&i){const e=this.converter.padBytes(i);t=t.slice(0,t.length-e),s.padding&&(t=t.concat("=".repeat(e)))}return t}),...t)}decode(e,...t){return super.decode(e,null,null,...t)}}class f extends u{constructor(...e){super(),this.charsets.default=[..."123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"],this.charsets.bitcoin=[..."123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"],this.charsets.flickr=[..."123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"],this.converter=new h(58,0,0),this.padding=!0,this.version="bitcoin",this.isMutable.padding=!0,this.isMutable.signed=!0,this.utils.validateArgs(e,!0)}encode(e,...t){return super.encode(e,null,(e=>{let{inputBytes:t,output:s,settings:i,type:n}=e;if(i.padding&&"int"!==n){let e=0;const i=t.length;if(i){for(;!t[e];)if(e++,e===i){e=0;break}const n=e;n&&(s="1".repeat(n).concat(s))}}return s}),...t)}decode(e,...t){return super.decode(e,null,(e=>{let{input:t,output:s,settings:i}=e;if(i.padding&&t.length>1){let e=0;for(;"1"===t[e];)e++;const i=e;i&&(s=Uint8Array.from([...new Array(i).fill(0),...s]))}return s}),...t)}}class g extends u{constructor(...e){super();const t=[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"];this.charsets.default=t.concat(["+","/"]),this.charsets.urlsafe=t.concat(["-","_"]),this.converter=new h(64,3,4),this.padding=!0,this.isMutable.padding=!0,this.utils.validateArgs(e,!0)}encode(e,...t){return super.encode(e,null,(e=>{let{output:t,settings:s,zeroPadding:i}=e;if(i){const e=this.converter.padBytes(i);t=t.slice(0,t.length-e),s.padding&&(t=t.concat("=".repeat(e)))}return t}),...t)}decode(e,...t){return super.decode(e,null,null,...t)}}class y extends u{constructor(...e){super(),this.charsets.adobe=[..."!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstu"],this.charsets.ascii85=this.charsets.adobe,this.charsets.rfc1924=[..."0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!#$%&()*+-;<=>?@^_`{|}~"],this.charsets.z85=[..."0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-:+=^!/*?&<>()[]{}@%$#"],this.converter=new h(85,4,5,84),this.version="ascii85",this.utils.validateArgs(e,!0)}encode(e,...t){return super.encode(e,(e=>{let t;return e.version.match(/adobe|ascii85/)&&(t=(e,t)=>t||"!!!!!"!==e?e:"z"),t}),(e=>{let{output:t,settings:s,zeroPadding:i}=e;if(i){const e=this.converter.padBytes(i);t=t.slice(0,t.length-e)}return"adobe"===s.version&&(t=`<~${t}~>`),t}),...t)}decode(e,...t){return super.decode(e,(e=>{let{input:t,settings:s}=e;return s.version.match(/adobe|ascii85/)&&(t=t.replace(/z/g,"!!!!!"),"adobe"===s.version&&(t=t.replace(/^<~|~>$/g,""))),t}),null,...t)}}class b extends u{constructor(...e){super(),this.charsets.default=[...'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!#$%&()*+,./:;<=>?@[]^_`{|}~"'],this.utils.validateArgs(e,!0)}encode(e,...t){const s=this.utils.validateArgs(t),i=this.utils.inputHandler.toBytes(e,s)[0];let n=0,r=0,o="";const a=this.charsets[s.version];if(i.forEach((e=>{if(r+=e<<n,n+=8,n>13){let e,t,s=13,i=r%8192;i<89&&(s=14,i=r%16384),r>>=s,n-=s,[e,t]=this.divmod(i,91),o=`${o}${a[t]}${a[e]}`}})),n){let e,t;[e,t]=this.divmod(r,91),o=o.concat(a[t]),(n>7||r>90)&&(o=o.concat(a[e]))}return o}decode(e,...t){const s=this.utils.validateArgs(t);let i=(e=String(e)).length,n=!1;i%2&&(n=!0,i--);let r=0,o=0;const a=this.charsets[s.version],l=new Array;for(let t=0;t<i;t+=2){const s=a.indexOf(e[t])+91*a.indexOf(e[t+1]);r=(s<<o)+r,o+=s%8192>88?13:14;do{l.push(r%256),r>>=8,o-=8}while(o>7)}if(n){const t=e.charAt(i),s=a.indexOf(t);l.push(((s<<o)+r)%256)}const h=Uint8Array.from(l);return this.utils.outputHandler.compile(h,s.outputType)}divmod(e,t){return[Math.floor(e/t),e%t]}}class v{constructor(...e){this.littleEndian=!0,this.numberMode=!1,this.outputType="buffer",this.utils={validateArgs:(e,t=!1)=>{const s={littleEndian:this.littleEndian,numberMode:this.numberMode,outputType:this.outputType,signed:!1};if(!e.length)return s;e.includes("number")&&(e.splice(e.indexOf("number"),1),s.numberMode=!0,s.outputType="float_n");const i=n.typeList.map((e=>`'${e}'`)).join(", ");if(e.forEach((e=>{if("le"===(e=String(e).toLowerCase()))s.littleEndian=!0;else if("be"===e)s.littleEndian=!1;else{if(!n.typeList.includes(e))throw new TypeError(`Invalid argument: '${e}.\nValid arguments are:\n'le', 'be', ${i}`);s.outputType=e}})),t)for(const e in s)this[e]=s[e];return s}},this.utils.validateArgs(e,!0)}encode(e,...t){const s=this.utils.validateArgs(t);return i.toBytes(e,s)[0]}decode(e,...t){const s=this.utils.validateArgs(t);return n.compile(e,s.outputType,s.littleEndian)}}class w extends u{constructor(...e){super(),this.charsets.emojis_v1=[..."🀄🃏🅰🅱🅾🅿🆎🆑🆒🆓🆔🆕🆖🆗🆘🆙🆚🇦🇧🇨🇩🇪🇫🇬🇭🇮🇯🇰🇱🇲🇳🇴🇵🇶🇷🇸🇹🇺🇻🇼🇽🇾🇿🈁🈂🈚🈯🈲🈳🈴🈵🈶🈷🈸🈹🈺🉐🉑🌀🌁🌂🌃🌄🌅🌆🌇🌈🌉🌊🌋🌌🌍🌎🌏🌐🌑🌒🌓🌔🌕🌖🌗🌘🌙🌚🌛🌜🌝🌞🌟🌠🌡🌤🌥🌦🌧🌨🌩🌪🌫🌬🌭🌮🌯🌰🌱🌲🌳🌴🌵🌶🌷🌸🌹🌺🌻🌼🌽🌾🌿🍀🍁🍂🍃🍄🍅🍆🍇🍈🍉🍊🍋🍌🍍🍎🍏🍐🍑🍒🍓🍔🍕🍖🍗🍘🍙🍚🍛🍜🍝🍞🍟🍠🍡🍢🍣🍤🍥🍦🍧🍨🍩🍪🍫🍬🍭🍮🍯🍰🍱🍲🍳🍴🍵🍶🍷🍸🍹🍺🍻🍼🍽🍾🍿🎀🎁🎂🎃🎄🎅🎆🎇🎈🎉🎊🎋🎌🎍🎎🎏🎐🎑🎒🎓🎖🎗🎙🎚🎛🎞🎟🎠🎡🎢🎣🎤🎥🎦🎧🎨🎩🎪🎫🎬🎭🎮🎯🎰🎱🎲🎳🎴🎵🎶🎷🎸🎹🎺🎻🎼🎽🎾🎿🏀🏁🏂🏃🏄🏅🏆🏇🏈🏉🏊🏋🏌🏎🏏🏐🏑🏒🏓🏔🏕🏖🏗🏘🏙🏚🏛🏜🏝🏞🏟🏠🏡🏢🏣🏤🏥🏦🏧🏨🏩🏪🏫🏬🏭🏮🏯🏰🏳🏴🏵🏷🏸🏹🏺🏻🏼🏽🏾🏿🐀🐁🐂🐃🐄🐅🐆🐇🐈🐉🐊🐋🐌🐍🐎🐏🐐🐑🐒🐓🐔🐕🐖🐗🐘🐙🐚🐛🐜🐝🐞🐟🐠🐡🐢🐣🐤🐥🐦🐧🐨🐩🐪🐫🐬🐭🐮🐯🐰🐱🐲🐳🐴🐵🐶🐷🐸🐹🐺🐻🐼🐽🐾🐿👀👁👂👃👄👅👆👇👈👉👊👋👌👍👎👏👐👑👒👓👔👕👖👗👘👙👚👛👜👝👞👟👠👡👢👣👤👥👦👧👨👩👪👫👬👭👮👯👰👱👲👳👴👵👶👷👸👹👺👻👼👽👾👿💀💁💂💃💄💅💆💇💈💉💊💋💌💍💎💏💐💑💒💓💔💕💖💗💘💙💚💛💜💝💞💟💠💡💢💣💤💥💦💧💨💩💪💫💬💭💮💯💰💱💲💳💴💵💶💷💸💹💺💻💼💽💾💿📀📁📂📃📄📅📆📇📈📉📊📋📌📍📎📏📐📒📓📔📕📖📗📘📙📚📛📜📝📞📟📠📡📢📣📤📥📦📧📨📩📪📫📬📭📮📯📰📱📲📳📴📵📶📷📸📹📺📻📼📽📿🔀🔁🔂🔃🔄🔅🔆🔇🔈🔉🔊🔋🔌🔍🔎🔏🔐🔑🔒🔓🔔🔕🔖🔗🔘🔙🔚🔛🔜🔝🔞🔟🔠🔡🔢🔣🔤🔥🔦🔧🔨🔩🔪🔫🔬🔭🔮🔯🔰🔱🔲🔳🔴🔵🔶🔷🔸🔹🔺🔻🔼🔽🕉🕊🕋🕌🕍🕎🕐🕑🕒🕓🕔🕕🕖🕗🕘🕙🕚🕛🕜🕝🕞🕟🕠🕡🕢🕣🕤🕥🕦🕧🕯🕰🕳🕴🕵🕶🕷🕸🕹🕺🖇🖊🖋🖌🖍🖐🖕🖖🖤🖥🖨🖱🖲🖼🗂🗃🗄🗑🗒🗓🗜🗝🗞🗡🗣🗨🗯🗳🗺🗻🗼🗽🗾🗿😀😁😂😃😄😅😆😇😈😉😊😋😌😍😎😏😐😑😒😓😔😕😖😗😘😙😚😛😜😝😞😟😠😡😢😣😤😥😦😧😨😩😪😫😬😭😮😯😰😱😲😳😴😵😶😷😸😹😺😻😼😽😾😿🙀🙁🙂🙃🙄🙅🙆🙇🙈🙉🙊🙌🙍🙎🙏🚀🚁🚂🚃🚄🚅🚆🚇🚈🚉🚊🚋🚌🚍🚎🚏🚐🚑🚒🚓🚔🚕🚖🚗🚘🚙🚚🚛🚜🚝🚞🚟🚠🚡🚢🚣🚤🚥🚦🚧🚨🚩🚪🚫🚬🚭🚮🚯🚰🚱🚲🚳🚴🚵🚶🚷🚸🚹🚺🚻🚼🚽🚾🚿🛀🛁🛂🛃🛄🛅🛋🛌🛍🛎🛏🛐🛑🛒🛠🛡🛢🛣🛤🛥🛩🛫🛬🛰🛳🛴🛵🛶🛷🛸🛹🤐🤑🤒🤓🤔🤕🤖🤗🤘🤙🤚🤛🤜🤝🤞🤟🤠🤡🤢🤣🤤🤥🤦🤧🤨🤩🤪🤫🤬🤭🤮🤯🤰🤱🤲🤳🤴🤵🤶🤷🤸🤹🤺🤼🤽🤾🥀🥁🥂🥃🥄🥅🥇🥈🥉🥊🥋🥌🥍🥎🥏🥐🥑🥒🥓🥔🥕🥖🥗🥘🥙🥚🥛🥜🥝🥞🥟🥠🥡🥢🥣🥤🥥🥦🥧🥨🥩🥪🥫🥬🥭🥮🥯🥰🥳🥴🥵🥶🥺🥼🥽🥾🥿🦀🦁🦂🦃🦄🦅🦆🦇🦈🦉🦊🦋🦌🦍🦎🦏🦐🦑🦒🦓🦔🦕🦖🦗🦘🦙🦚🦛🦜🦝🦞🦟🦠🦡🦢🦰🦱🦲🦳🦴🦵🦶🦷🦸🦹🧀🧁🧂🧐🧑🧒🧓🧔🧕"],this.charsets.emojis_v2=[..."🀄🃏⏰⏳☔♈♉♊♋♌♍♎♏♐♑♒♓♿⚓⚡⚽⚾⛄⛅⛎⛔⛪⛲⛳⛵⛺⛽✊✋✨⭐🛕🛖🛗🛝🛞🛟🛺🈁🛻🤌🤏🤿🥱🥲🥸🥹🥻🦣🦤🦥🦦🦧🌀🌁🌂🌃🌄🌅🌆🌇🌈🌉🌊🌋🌌🌍🌎🌏🌐🌑🌒🌓🌔🌕🌖🌗🌘🌙🌚🌛🌜🌝🌞🌟🌠🦨🦩🦪🦫🦬🦭🦮🦯🦺🦻🌭🌮🌯🌰🌱🌲🌳🌴🌵🦼🌷🌸🌹🌺🌻🌼🌽🌾🌿🍀🍁🍂🍃🍄🍅🍆🍇🍈🍉🍊🍋🍌🍍🍎🍏🍐🍑🍒🍓🍔🍕🍖🍗🍘🍙🍚🍛🍜🍝🍞🍟🍠🍡🍢🍣🍤🍥🍦🍧🍨🍩🍪🍫🍬🍭🍮🍯🍰🍱🍲🍳🍴🍵🍶🍷🍸🍹🍺🍻🍼🦽🍾🍿🎀🎁🎂🎃🎄🎅🎆🎇🎈🎉🎊🎋🎌🎍🎎🎏🎐🎑🎒🎓🦾🦿🧃🧄🧅🧆🧇🎠🎡🎢🎣🎤🎥🧈🎧🎨🎩🎪🎫🎬🎭🎮🎯🎰🎱🎲🎳🎴🎵🎶🎷🎸🎹🎺🎻🎼🎽🎾🎿🏀🏁🏂🏃🏄🏅🏆🏇🏈🏉🏊🧉🧊🧋🏏🏐🏑🏒🏓🧌🧍🧎🧏🧖🧗🧘🧙🧚🧛🧜🧝🏠🏡🏢🏣🏤🏥🏦🧞🏨🏩🏪🏫🏬🏭🏮🏯🏰🧟🏴🧠🧢🏸🏹🏺🧣🧤🧥🧦🧧🐀🐁🐂🐃🐄🐅🐆🐇🐈🐉🐊🐋🐌🐍🐎🐏🐐🐑🐒🐓🐔🐕🐖🐗🐘🐙🐚🐛🐜🐝🐞🐟🐠🐡🐢🐣🐤🐥🐦🐧🐨🐩🐪🐫🐬🐭🐮🐯🐰🐱🐲🐳🐴🐵🐶🐷🐸🐹🐺🐻🐼🐽🐾🧨👀🧩👂👃👄👅👆👇👈👉👊👋👌👍👎👏👐👑👒👓👔👕👖👗👘👙👚👛👜👝👞👟👠👡👢👣👤👥👦👧👨👩👪👫👬👭👮👯👰👱👲👳👴👵👶👷👸👹👺👻👼👽👾👿💀💁💂💃💄💅💆💇💈💉💊💋💌💍💎💏💐💑💒💓💔💕💖💗💘💙💚💛💜💝💞💟💠💡💢💣💤💥💦💧💨💩💪💫💬💭💮💯💰💱💲💳💴💵💶💷💸🧪💺💻💼💽💾💿📀🧫📂📃📄🧬📆📇📈📉📊📋📌📍📎📏📐📒📓📔📕📖📗📘📙📚📛📜📝📞📟📠📡📢📣📤📥📦📧📨📩📪📫📬📭📮📯📰📱📲📳🧭📵📶📷📸📹📺📻📼🧮📿🧯🧰🧱🧲🧳🔅🔆🔇🔈🔉🔊🔋🔌🔍🔎🔏🔐🔑🔒🔓🔔🔕🔖🔗🔘🧴🧵🧶🧷🧸🧹🧺🧻🧼🧽🧾🧿🔥🔦🔧🔨🔩🔪🔫🔬🔭🔮🔯🔰🔱🔲🔳🩰🩱🩲🩳🩴🩸🩹🩺🩻🩼🪀🪁🕋🕌🕍🕎🪂🪃🪄🪅🪆🪐🪑🪒🪓🪔🪕🪖🪗🪘🪙🪚🪛🪜🪝🪞🪟🪠🪡🪢🪣🪤🪥🪦🪧🪨🪩🪪🪫🕺🪬🪰🪱🪲🪳🪴🖕🖖🖤🪵🪶🪷🪸🪹🪺🫀🫁🫂🫃🫄🫅🫐🫑🫒🫓🫔🫕🫖🫗🗻🗼🗽🗾🗿😀😁😂😃😄😅😆😇😈😉😊😋😌😍😎😏😐😑😒😓😔😕😖😗😘😙😚😛😜😝😞😟😠😡😢😣😤😥😦😧😨😩😪😫😬😭😮😯😰😱😲😳😴😵😶😷😸😹😺😻😼😽😾😿🙀🙁🙂🙃🙄🙅🙆🙇🙈🙉🙊🙌🙍🙎🙏🚀🚁🚂🚃🚄🚅🚆🚇🚈🚉🚊🚋🚌🚍🚎🚏🚐🚑🚒🚓🚔🚕🚖🚗🚘🚙🚚🚛🚜🚝🚞🚟🚠🚡🚢🚣🚤🚥🚦🚧🚨🚩🚪🚫🚬🚭🚮🚯🚰🚱🚲🚳🚴🚵🚶🚷🚸🚹🚺🚻🚼🚽🚾🚿🛀🛁🛂🛃🛄🛅🫘🛌🫙🫠🫡🛐🛑🛒🫢🫣🫤🫥🫦🫧🫰🛫🛬🫱🫲🛴🛵🛶🛷🛸🛹🤐🤑🤒🤓🤔🤕🤖🤗🤘🤙🤚🤛🤜🤝🤞🤟🤠🤡🤢🤣🤤🤥🤦🤧🤨🤩🤪🤫🤬🤭🤮🤯🤰🤱🤲🤳🤴🤵🤶🤷🤸🤹🤺🤼🤽🤾🥀🥁🥂🥃🥄🥅🥇🥈🥉🥊🥋🥌🥍🥎🥏🥐🥑🥒🥓🥔🥕🥖🥗🥘🥙🥚🥛🥜🥝🥞🥟🥠🥡🥢🥣🥤🥥🥦🥧🥨🥩🥪🥫🥬🥭🥮🥯🥰🥳🥴🥵🥶🥺🥼🥽🥾🥿🦀🦁🦂🦃🦄🦅🦆🦇🦈🦉🦊🦋🦌🦍🦎🦏🦐🦑🦒🦓🦔🦕🦖🦗🦘🦙🦚🦛🦜🦝🦞🦟🦠🦡🦢🫳🫴🫵🫶🦴🦵🦶🦷🦸🦹🧀🧁🧂🧐🧑🧒🧓🧔🧕"],this.charsets.emojis_v3=Object.fromEntries(this.charsets.emojis_v2.map(((e,t)=>[e,t]))),this.charsets.emojis_v1.forEach(((e,t)=>{e in this.charsets.emojis_v3||(this.charsets.emojis_v3[e]=t)})),this.padChars={default:"☕",p4x:{emojis_v1:["⚜","🏍","📑","🙋"],emojis_v2:["🥷","🛼","📑","🙋"],emojis_v3:{"⚜":"🀄","🥷":"🀄","🏍":"🧋","🛼":"🧋","📑":"📒","🙋":"🙌"}}},this.converter=new h(1024,5,4),this.padding=!0,this.version="emojis_v1",this.isMutable.padding=!0,this.isMutable.trim=!0,this.trim=null,this.utils.converterArgs.trim=["notrim","trim"],this.utils.validateArgs(e,!0),"emojis_v3"===this.version&&(this.version="emojis_v2"),null===this.trim&&(this.trim="emojis_v2"===this.version)}encode(e,...t){t.includes("emojis_v3")&&t.splice(t.indexOf("emojis_v3"),1,"emojis_v2");return super.encode(e,null,(e=>{let{output:t,settings:s,zeroPadding:i}=e;const n=this.charsets[s.version];let r=[...t];if(i>1){const e=this.converter.padBytes(i);if(s.padding){const t=s.trim?1:e,i=new Array(t).fill(this.padChars.default);r.splice(r.length-e,e,...i)}else r.splice(r.length-e,e)}else if(1===i){const e=n.indexOf(r.pop())>>8;r.push(this.padChars.p4x[s.version].at(e))}return r.join("")}),...t)}decode(e,...t){const s=this.utils.validateArgs(t);/emojis_v[1|2]/.test(s.version)&&(s.version="emojis_v3"),e=String(e);const i=this.charsets[s.version],n=[...e],r=n.at(-1);let o=!1;if(Array.isArray(i)){for(let t=0;t<this.padChars.p4x[s.version].length;t++)if(r===this.padChars.p4x[s.version].at(t)){n.splice(-1,1,i.at(t<<8)),e=n.join(""),o=!0;break}}else r in this.padChars.p4x[s.version]&&(n.splice(-1,1,this.padChars.p4x[s.version][r]),e=n.join(""),o=!0);let a=this.converter.decode(e,this.charsets[s.version],s.littleEndian);return o&&(a=new Uint8Array(a.buffer.slice(0,-1))),this.utils.outputHandler.compile(a,s.outputType)}}class m extends u{constructor(...e){super(!1),this.charsets.default="<placeholder>",this.charsets.hex="<placeholder>",this.version="default",this.converter=new h(10,0,0),this.hexlify=new h(16,1,2),this.utils=new l(this,!1),this.littleEndian=!0,this.hasSignedMode=!0,this.isMutable.signed=!0,this.utils.validateArgs(e,!0)}encode(e,...t){const s=this.utils.validateArgs(t);let i,n;const r=s.signed;s.signed=!0,[i,n]=this.utils.inputHandler.toBytes(e,s);let o=this.converter.encode(i,null,s.littleEndian)[0],a=BigInt(o),l=new Array;if(n){if(!r)throw new TypeError("Negative values in unsigned mode are invalid.");a=-a}if(r)for(;;){const e=Number(127n&a);if(a>>=7n,0==a&&0==(64&e)||-1==a&&0!=(64&e)){l.push(e);break}l.push(128|e)}else for(;;){const e=Number(127n&a);if(a>>=7n,0==a){l.push(e);break}l.push(128|e)}const h=Uint8Array.from(l);return"hex"===s.version?this.hexlify.encode(h,[..."0123456789abcdef"],!1)[0]:h}decode(e,...t){const s=this.utils.validateArgs(t);if("hex"===s.version?e=this.hexlify.decode(String(e).toLowerCase(),[..."0123456789abcdef"],!1):e instanceof ArrayBuffer&&(e=new Uint8Array(e)),1===e.length&&!e[0])return this.utils.outputHandler.compile(new Uint8Array(1),s.outputType,!0);e=Array.from(e);let i,n,r,o=0n,a=-7n;for(i of e)a+=7n,o+=BigInt(127&i)<<a;s.signed&&0!=(64&i)&&(o|=-(1n<<a+7n)),[n,r]=this.utils.extractSign(o.toString());const l=this.converter.decode(n,[..."0123456789"],!0);return this.utils.outputHandler.compile(l,s.outputType,!0,r)}}class A extends u{constructor(e,...t){if(super(),!e||!Number.isInteger(e)||e<2||e>36)throw new RangeError("Radix argument must be provided and has to be an integer between 2 and 36.");this.charsets.default=[..."0123456789abcdefghijklmnopqrstuvwxyz"].slice(0,e),this.converter=new h(e,0,0),this.hasSignedMode=!0,this.littleEndian=!(2===e||16===e),this.signed=!0,this.version="default",this.isMutable.littleEndian=!0,this.isMutable.upper=!0,this.utils.validateArgs(t,!0)}encode(e,...t){return super.encode(e,null,null,...t)}decode(e,...t){return super.decode(e,(e=>{let{input:t}=e;if(2===this.converter.radix){const e=(8-t.length%8)%8;t=`${"0".repeat(e)}${t}`}else if(16===this.converter.radix){const e=t.length%2;t=`${"0".repeat(e)}${t}`}return t}),null,...t)}}
/**
     * [BaseEx]{@link https://github.com/UmamiAppearance/BaseExJS}
     *
     * @version 0.5.0
     * @author UmamiAppearance [mail@umamiappearance.eu]
     * @license GPL-3.0 AND BSD-3-Clause (only regarding Base91, Copyright (c) 2000-2006 Joachim Henke)
     */return e.Base1=c,e.Base16=d,e.Base32=p,e.Base58=f,e.Base64=g,e.Base85=y,e.Base91=b,e.BaseEx=class{constructor(e="buffer"){if(!o.typeList.includes(e)){let t=`Invalid argument '${e}' for output type. Allowed types are:\n`;throw t=t.concat(o.typeList.join(", ")),new TypeError(t)}this.base1=new c("default",e),this.base16=new d("default",e),this.base32_crockford=new p("rfc4648",e),this.base32_rfc3548=new p("rfc3548",e),this.base32_rfc4648=new p("rfc4648",e),this.base32_zbase32=new p("zbase32",e),this.base58=new f("default",e),this.base58_bitcoin=new f("bitcoin",e),this.base58_flickr=new f("flickr",e),this.base64=new g("default",e),this.base64_urlsafe=new g("urlsafe",e),this.base85_adobe=new y("adobe",e),this.base85_ascii=new y("ascii85",e),this.base85_z85=new y("z85",e),this.base91=new b("default",e),this.leb128=new m("default",e),this.ecoji_v1=new w("emojis_v1"),this.ecoji_v2=new w("emojis_v2"),this.byteConverter=new v(e),this.simpleBase={};for(let t=2;t<37;t++)this.simpleBase[`base${t}`]=new A(t,e)}},e.ByteConverter=v,e.Ecoji=w,e.LEB128=m,e.SimpleBase=A,Object.defineProperty(e,"__esModule",{value:!0}),e}({});
